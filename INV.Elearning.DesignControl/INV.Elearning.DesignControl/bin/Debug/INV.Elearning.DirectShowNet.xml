<?xml version="1.0"?>
<doc>
    <assembly>
        <name>INV.Elearning.DirectShowNet</name>
    </assembly>
    <members>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pBuild">
            <summary>
            Graph Builder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pGraph">
            <summary>
            Filter Graph
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pControl">
            <summary>
            Media Control
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pEvent">
            <summary>
            Event control
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pPos">
            <summary>
            Media position control
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pAudioInput">
            <summary>
            Filter thiết bị ghi âm đầu vào
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pLameEnc">
            <summary>
            Filter  encoder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pAudioProps">
            <summary>
            Setting cho encoder filter
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pWriter">
            <summary>
            Filter writer
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.pSink">
            <summary>
            Pointer điều khiển writer
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.E_FAIL">
            <summary>
            Mã lỗi cho các lỗi không biết
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.hr">
            <summary>
            Mã HRESULT
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AudioRecorder.m_dsRotEntry">
            <summary>
            Running Object Table sử dụng khi debug
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.LastError">
            <summary>
            Lỗi xảy ra khi thực hiện thao tác cuối cùng
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.LastWin32Error">
            <summary>
            Win32 error message cho lỗi xảy ra khi thực hiện thao tác cuối cùng 
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.InputDevice">
            <summary>
            Thiết bị đầu vào
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.OutputFile">
            <summary>
            File đầu ra
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.State">
            <summary>
            Trạng thái Audio Recorder
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.AudioRecorder.Start">
            <summary>
            Bắt đầu ghi âm hoặc tiếp tục khi âm khi đang tạm dừng
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.AudioRecorder.Pause">
            <summary>
            Tạm dừng ghi âm
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.AudioRecorder.Stop">
            <summary>
            Dừng ghi âm
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.AudioRecorder.RecordingDuration">
            <summary>
            Thời lượng hiện tại của file ghi âm
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IAudioEncoderProperties.get_PESOutputEnabled(System.Int32@)">
            <summary>
            Is PES output enabled? Return TRUE or FALSE
            </summary>      
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IAudioEncoderProperties.set_PESOutputEnabled(System.Int32)">
            <summary>
            Enable/disable PES output
            </summary>      
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IAudioEncoderProperties.get_Bitrate(System.Int32@)">
            <summary>
            Get target compression bitrate in Kbits/s
            </summary>      
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IAudioEncoderProperties.set_Bitrate(System.Int32)">
            <summary>
            Set target compression bitrate in Kbits/s
            Not all numbers available! See spec for details!
            </summary>      
        </member>
        <member name="T:INV.Elearning.DirectShowNet.CameraRecorder">
            <summary>
            Interaction logic for CameraRecorder.xaml
            </summary>
            <summary>
            CameraRecorder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.VideoInputDevice">
            <summary>
            Thiết bị video input. Sử dụng phương thức INV.Elearning.DirectShowNet.DsDeviceHelper.VideoInputDevices() để truy vấn danh sách
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.AudioInputDevice">
            <summary>
            Thiết bị audio input. Sử dụng phương thức INV.Elearning.DirectShowNet.DsDeviceHelper.AudioInputDevices() để truy vấn danh sách
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.OutputFilename">
            <summary>
            Tệp tin video output (*.avi)
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.State">
            <summary>
            Trạng thái của recorder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pGraph">
            <summary>
            Filter Graph
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pBuild">
            <summary>
            Graph Builder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pCapBuild">
            <summary>
            Capture Graph Builder: đối tượng hỗ trợ tạo video, audio
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pCamera">
            <summary>
            Filter video input
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pAudio">
            <summary>
            Filter audio input
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pVideoRenderer">
            <summary>
            Filter video renderer
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pWindowlessControl">
            <summary>
            Filter điều khiển chế độ windowless cho video renderer
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pControl">
            <summary>
            Điều khiển graph
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pEvent">
            <summary>
            Event graph
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.pPos">
            <summary>
            Media position control
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.E_FAIL">
            <summary>
            Mã lỗi cho các lỗi không biết
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.hr">
            <summary>
            Mã lỗi cho thao tác cuối cùng
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.CameraRecorder.lastError">
            <summary>
            Chuỗi ghi lỗi cho thao tác cuối cùng
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.LastError">
            <summary>
            Lỗi xảy ra khi thực hiện thao tác cuối cùng
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.LastWin32Error">
            <summary>
            Win32 error message cho lỗi xảy ra khi thực hiện thao tác cuối cùng 
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.VideoWidth">
            <summary>
            Chiều rộng thực tế của video
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.VideoHeight">
            <summary>
            Chiều cao thực tế của video
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.VideoARWidth">
            <summary>
            The aspect ratio width of the native video rectangle
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.VideoARHeight">
            <summary>
             The aspect ratio height of the native video rectangle
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.CameraRecorder.RecordingDuration">
            <summary>
            Thời lượng hiện tại của file ghi âm
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.#ctor">
            <summary>
            Khởi tạo mới đối tượng recorder
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.Finalize">
            <summary>
            Hàm hủy đối tượng => giải phóng tài nguyên
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.Start">
            <summary>
            Bắt đầu ghi hình
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
            <summary>
            Bắt đầu ghi hình
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.Preview">
            <summary>
            Bật chế độ xem trước hình ảnh của thiết bị camera
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.Pause">
            <summary>
            Tạm dừng recorder khi đang quay
            Lưu ý: không thể tạm dừng khi đang preview
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.Stop">
            <summary>
            Dừng recorder khi đang quay hoặc đang preview
            </summary>
            <returns>Thao tác thành công hay thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.GetCurrentImage(System.String)">
            <summary>
            Ghi hình ảnh tĩnh hiện tại ra file
            (Thuật toán sử dụng hiện tại: lấy bitmap data từ video renderer VMR9)
            </summary>
            <param name="filePath">Địa chỉ file cần write (*.jpg)</param>
            <returns>Thành công hoặc thất bại</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.CleanUp">
            <summary>
            Giải phóng tài nguyên
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.SetCameraMode">
            <summary>
            phóng khung hình camera theo form
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.CameraRecorder.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.DSDeviceHelper.logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.DSDeviceHelper.AudioInputDevices">
            <summary>
            Lấy danh sách các thiết bị ghi âm
            </summary>
            <returns>Danh sách thiết bị ghi âm</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.DSDeviceHelper.AudioOutputDevices">
            <summary>
            Lấy danh sách các thiết bị phát âm
            </summary>
            <returns>Danh sách các thiết bị phát âm</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.DSDeviceHelper.VideoInputDevices">
            <summary>
            Lấy danh sách các thiết bị ghi hình
            </summary>
            <returns>Danh sách các thiết bị ghi hình</returns>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AmAsfWriterConfigParam.None">
            <summary>No parameters.</summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AmAsfWriterConfigParam.AutoIndex">
            <summary>
            Indicates whether the WM ASF Writer should automatically create a temporal index 
            after it has completed encoding a file. Set this parameter to FALSE if you want 
            to create a frame-based index using the Windows Media Format SDK directly.
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AmAsfWriterConfigParam.Multipass">
            <summary>
            Indicates whether the filter should operate in two-pass mode. In two-pass mode the filter 
            makes two passes through the file. In the first pass, the filter examines each media stream 
            in its entirety to determine the optimal encoding parameters for the file. The actual 
            encoding is performed in the second pass. Therefore, to create an ASF file in two-pass mode, 
            you must run the graph, wait for an EC_PREPROCESS_COMPLETE event, seek to the beginning of 
            the source file, and then run the graph a second time.
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.AmAsfWriterConfigParam.DontCompress">
            <summary>
            Indicates that the WM ASF Writer will not attempt to compress the input streams.
            Use this flag to pack content that is not Windows Media–based into an ASF file.
            </summary>
        </member>
        <member name="T:INV.Elearning.DirectShowNet.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.FFMPEGPath">
            <summary>
            Đường dẫn tới ffmpeg.exe (sử dụng bản 4.9.2)
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.AudioInputDevice">
            <summary>
            Thiết bị micro sử dụng để ghi âm
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.UseSystemAudio">
            <summary>
            Ghi âm thanh hệ thống
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.ShowCursor">
            <summary>
            Ẩn hiện con trỏ chuột
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.ScreenArea">
            <summary>
            Vùng khi hình màn hình
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.Fps">
            <summary>
            Khung hình trên một giây, trong khoảng 10-30
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.OutputFile">
            <summary>
            Tệp tin output
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.LastError">
            <summary>
            Lỗi cuối cùng xảy ra
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.LastErrorCode">
            <summary>
            Mã lỗi cuối cùng xảy ra
            </summary>
        </member>
        <member name="P:INV.Elearning.DirectShowNet.ScreenVideoRecorder.State">
            <summary>
            Trạng thái của recorder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.ScreenVideoRecorder.recordingSession">
            <summary>
            Recording session sử dụng để lưu tên một session làm tiền tố cho tên các clips trong session
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.ScreenVideoRecorder.pGraph">
            <summary>
            Filter Graph
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.ScreenVideoRecorder.pBuild">
            <summary>
            Graph Builder
            </summary>
        </member>
        <member name="F:INV.Elearning.DirectShowNet.ScreenVideoRecorder.pControl">
            <summary>
            Điều khiển graph
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ScreenVideoRecorder.#ctor">
            <summary>
            Hàm khởi tạo
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ScreenVideoRecorder.Start">
            <summary>
            Bắt đầu ghi hình
            </summary>
            <returns></returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ScreenVideoRecorder.CompareFormat(DirectShowLib.WaveFormatEx,DirectShowLib.WaveFormatEx)">
            <summary>
            So sánh các thông số cần thiết để lấy kiểm tra định dạng tương đồng nhau
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ScreenVideoRecorder.GetFormat(System.Collections.Generic.IEnumerable{DirectShowLib.AMMediaType},System.Collections.Generic.IEnumerable{DirectShowLib.AMMediaType},DirectShowLib.AMMediaType@,DirectShowLib.AMMediaType@)">
            <summary>
            Lấy định dạng
            </summary>
            <param name="micFormats"></param>
            <param name="sysFormats"></param>
            <param name="micFormat"></param>
            <param name="sysFormat"></param>
        </member>
        <member name="T:INV.Elearning.DirectShowNet.ProfileManager">
            <summary>Used to create instances of the WM profile manager.</summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ProfileManager.#ctor">
            <summary>Prevent instantiation.</summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ProfileManager.CreateInstance">
            <summary>Creates a profile manager object.</summary>
            <returns>The IWMProfileManager interface of the newly created profile manager object.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ProfileManager.WMCreateProfileManager">
            <summary>The WMCreateProfileManager function creates a profile manager object.</summary>
            <returns>The IWMProfileManager interface of the newly created profile manager object.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ProfileManager.GetProfileName(DirectShowLib.IWMProfile)">
            <summary>Gets the name of a Windows Media Profile.</summary>
            <param name="profile">The profile whose name is to be retrieved.</param>
            <returns>The name of the profile; null if unavailable.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.ProfileManager.GetProfileDescription(DirectShowLib.IWMProfile)">
            <summary>Gets the description of a Windows Media Profile.</summary>
            <param name="profile">The profile whose description is to be retrieved.</param>
            <returns>The description of the profile; null if unavailable.</returns>
        </member>
        <member name="T:INV.Elearning.DirectShowNet.IWMProfileManager">
            <summary>
            The IWMProfileManager interface is used to create profiles, load existing profiles, and save profiles. 
            It can be used with both system profiles and application-defined custom profiles. To make changes to a 
            profile, you must load it into a profile object using one of the loading methods of this interface. You
            can then access the profile data through the use of the interfaces of the profile object.
            </summary>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.CreateEmptyProfile(System.UInt32)">
            <summary>The CreateEmptyProfile method creates an empty profile object.</summary>
            <param name="dwVersion">DWORD containing one member of the WMT_VERSION enumeration type.</param>
            <returns>A pointer to an IWMProfile interface.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.LoadProfileByID(System.Guid@)">
            <summary>The LoadProfileByID method loads a system profile identified by its globally unique identifier.</summary>
            <param name="guidProfile">GUID identifying the profile.</param>
            <returns>A pointer to an IWMProfile interface.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.LoadProfileByData(System.String)">
            <summary>The LoadProfileByData method creates a profile object and populates it with data from a stored string.</summary>
            <param name="pwszProfile">
            Pointer to a wide-character null-terminated string containing the profile. 
            Profile strings are limited to 153600 wide characters.
            </param>
            <returns>A pointer to an IWMProfile interface.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.SaveProfile(DirectShowLib.IWMProfile,System.String,System.UInt32@)">
            <summary>The SaveProfile method saves a profile into an XML-formatted string.</summary>
            <param name="pProfile">Pointer to the IWMProfile interface of the object containing the profile data to be saved.</param>
            <param name="pwszProfile">
            Pointer to a wide-character null-terminated string containing the profile. Set this to NULL to 
            retrieve the length of string required.
            </param>
            <param name="pdwLength">
            On input, specifies the length of the pwszProfile string. On output, if the method succeeds, 
            specifies a pointer to a DWORD containing the number of characters, including the terminating 
            null character, required to hold the profile.
            </param>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.GetSystemProfileCount">
            <summary>The GetSystemProfileCount method retrieves the number of system profiles.</summary>
            <returns>The number of system profiles.</returns>
        </member>
        <member name="M:INV.Elearning.DirectShowNet.IWMProfileManager.LoadSystemProfile(System.UInt32)">
            <summary>The LoadSystemProfile method loads a system profile identified by its index.</summary>
            <param name="dwProfileIndex">DWORD containing the profile index.</param>
            <returns>A pointer to an IWMProfile interface.</returns>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMMStream">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMMMultiStream">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMOpenModes">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="M:DirectShowLib.MultimediaStreaming.MsError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DES or DShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMMultiMediaStream">
            <summary>
            From CLSID_AMMultiMediaStream
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMMediaTypeStream">
            <summary>
            From CLSID_AMMediaTypeStream
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMDirectDrawStream">
            <summary>
            From CLSID_AMDirectDrawStream
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMAudioStream">
            <summary>
            From CLSID_AMAudioStream
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.AMAudioData">
            <summary>
            From CLSID_AMAudioData
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.CompletionStatusFlags">
            <summary>
            From COMPLETION_STATUS_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.SSUpdate">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.StreamState">
            <summary>
            From STREAM_STATE
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.StreamType">
            <summary>
            From STREAM_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.MultimediaStreaming.MMSSF">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="F:DirectShowLib.MultimediaStreaming.MSPID.PrimaryVideo">
            <summary> MSPID_PrimaryVideo </summary>
        </member>
        <member name="F:DirectShowLib.MultimediaStreaming.MSPID.PrimaryAudio">
            <summary> MSPID_PrimaryAudio </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BDAChangeState">
            <summary>
            From BDA_CHANGE_STATE
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.MulticastMode">
            <summary>
            From BDA_MULTICAST_MODE
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.MediaSampleContent">
            <summary>
            From MEDIA_SAMPLE_CONTENT
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BDANodeDescriptor">
            <summary>
            From BDANODE_DESCRIPTOR
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.CCSubstreamService">
            <summary>
            From KS_CC_SUBSTREAM_SERVICE_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.TIFLoad">
            <summary>
            From CLSID_TIFLoad
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.FECMethod">
            <summary>
            From FECMethod
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BinaryConvolutionCodeRate">
            <summary>
            From BinaryConvolutionCodeRate
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.Polarisation">
            <summary>
            From Polarisation
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.SpectralInversion">
            <summary>
            From SpectralInversion
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ModulationType">
            <summary>
            From ModulationType
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.DVBSystemType">
            <summary>
            From DVBSystemType
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.HierarchyAlpha">
            <summary>
            From HierarchyAlpha
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.GuardInterval">
            <summary>
            From GuardInterval
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.TransmissionMode">
            <summary>
            From TransmissionMode
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ComponentStatus">
            <summary>
            From ComponentStatus
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ComponentCategory">
            <summary>
            From ComponentCategory
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.MPEG2StreamType">
            <summary>
            From MPEG2StreamType
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ATSCComponentTypeFlags">
            <summary>
            From ATSCComponentTypeFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BDATemplateConnection">
            <summary>
            From BDA_TEMPLATE_CONNECTION
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BDACompFlags">
            <summary>
            From BDA_Comp_Flags
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.RunningStatus">
            <summary>
            Define possible values for a running_status field according to ETSI EN 300 468
            This enum doesn't exist in the c++ headers
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ETFilterEncProperties">
            <summary>
            CLSID_ETFilterEncProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ETFilterTagProperties">
            <summary>
            CLSID_ETFilterTagProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.DTFilterEncProperties">
            <summary>
            CLSID_DTFilterEncProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.DTFilterTagProperties">
            <summary>
            CLSID_DTFilterTagProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.XDSCodecProperties">
            <summary>
            CLSID_XDSCodecProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.XDSCodecTagProperties">
            <summary>
            CLSID_XDSCodecTagProperties
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.CXDSData">
            <summary>
            CLSID_CXDSData
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.XDSCodec">
            <summary>
            CLSID_XDSCodec
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.ProtType">
            <summary>
            From ProtType
            </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.XDSCodecNewXDSRating">
            <summary> EVENTID_XDSCodecNewXDSRating </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.XDSCodecDuplicateXDSRating">
            <summary> EVENTID_XDSCodecDuplicateXDSRating </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.XDSCodecNewXDSPacket">
            <summary> EVENTID_XDSCodecNewXDSPacket </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterRatingChange">
            <summary> EVENTID_DTFilterRatingChange </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterRatingsBlock">
            <summary> EVENTID_DTFilterRatingsBlock </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterRatingsUnblock">
            <summary> EVENTID_DTFilterRatingsUnblock </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterXDSPacket">
            <summary> EVENTID_DTFilterXDSPacket </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETFilterEncryptionOn">
            <summary> EVENTID_ETFilterEncryptionOn </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETFilterEncryptionOff">
            <summary> EVENTID_ETFilterEncryptionOff </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterCOPPUnblock">
            <summary> EVENTID_DTFilterCOPPUnblock </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.EncDecFilterError">
            <summary> EVENTID_EncDecFilterError </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterCOPPBlock">
            <summary> EVENTID_DTFilterCOPPBlock </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETFilterCopyOnce">
            <summary> EVENTID_ETFilterCopyOnce </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETFilterCopyNever">
            <summary> EVENTID_ETFilterCopyNever </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterDataFormatOK">
            <summary> EVENTID_DTFilterDataFormatOK </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DTFilterDataFormatFailure">
            <summary> EVENTID_DTFilterDataFormatFailure </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETDTFilterLicenseOK">
            <summary> EVENTID_ETDTFilterLicenseOK </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.ETDTFilterLicenseFailure">
            <summary> EVENTID_ETDTFilterLicenseFailure </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.EncDecFilterEvent">
            <summary> EVENTID_EncDecFilterEvent </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.FormatNotSupportedEvent">
            <summary> EVENTID_FormatNotSupportedEvent </summary>
        </member>
        <member name="F:DirectShowLib.BDA.EventID.DemultiplexerFilterDiscontinuity">
            <summary> EVENTID_DemultiplexerFilterDiscontinuity </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DirectShowLib.BDA.PidBits" -->
        <!-- Badly formed XML comment ignored for member "T:DirectShowLib.BDA.MpegHeaderBits" -->
        <!-- Badly formed XML comment ignored for member "T:DirectShowLib.BDA.MpegHeaderVersionBits" -->
        <!-- Badly formed XML comment ignored for member "T:DirectShowLib.BDA.MpegDuration" -->
        <member name="T:DirectShowLib.BDA.MpegDateAndTime">
            <summary>
            From MPEG_DATE_AND_TIME
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.DsmccElement">
            <summary>
            From DSMCC_ELEMENT
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.MpeElement">
            <summary>
            From MPE_ELEMENT
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.EnTvRat_System">
            <summary>
            From EnTvRat_System
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.EnTvRat_GenericLevel">
            <summary>
            From EnTvRat_GenericLevel
            </summary>
        </member>
        <member name="T:DirectShowLib.BDA.BfEnTvRat_GenericAttributes">
            <summary>
            From BfEnTvRat_GenericAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.AMGBF">
            <summary>
            From AM_GBF_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AMVideoFlag">
            <summary>
            From AM_VIDEO_FLAG_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AMSamplePropertyFlags">
            <summary>
            From AM_SAMPLE_PROPERTY_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.PinInfo">
            <summary>
            From PIN_INFO
            </summary>
        </member>
        <member name="T:DirectShowLib.AMMediaType">
            <summary>
            From AM_MEDIA_TYPE - When you are done with an instance of this class,
            it should be released with FreeAMMediaType() to avoid leaking
            </summary>
        </member>
        <member name="T:DirectShowLib.PinDirection">
            <summary>
            From PIN_DIRECTION
            </summary>
        </member>
        <member name="T:DirectShowLib.AMSeekingSeekingCapabilities">
            <summary>
            From AM_SEEKING_SeekingCapabilities
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterState">
            <summary>
            From FILTER_STATE
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterInfo">
            <summary>
            From FILTER_INFO
            </summary>
        </member>
        <member name="T:DirectShowLib.AMSeekingSeekingFlags">
            <summary>
            From AM_SEEKING_SeekingFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.AllocatorProperties">
            <summary>
            From ALLOCATOR_PROPERTIES
            </summary>
        </member>
        <member name="T:DirectShowLib.AMSample2Properties">
            <summary>
            From AM_SAMPLE2_PROPERTIES
            </summary>
        </member>
        <member name="M:DirectShowLib.IPin.ConnectionMediaType(DirectShowLib.AMMediaType)">
            <summary>
            Release returned parameter with DsUtils.FreeAMMediaType
            </summary>
        </member>
        <member name="M:DirectShowLib.IPin.QueryPinInfo(DirectShowLib.PinInfo@)">
            <summary>
            Release returned parameter with DsUtils.FreePinInfo
            </summary>
        </member>
        <member name="M:DirectShowLib.IMediaSample.GetMediaType(DirectShowLib.AMMediaType@)">
            <summary>
            Returned object must be released with DsUtils.FreeAMMediaType()
            </summary>
        </member>
        <member name="T:DirectShowLib.AMFilterMiscFlags">
            <summary>
            From _AM_FILTER_MISC_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMStreamInfoFlags">
            <summary>
            From AM_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG2Program">
            <summary>
            From MPEG2_PROGRAM_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AMAudioRendererStatParam">
            <summary>
            From _AM_AUDIO_RENDERER_STAT_PARAM
            </summary>
        </member>
        <member name="T:DirectShowLib.AMStreamInfo">
            <summary>
            From AM_STREAM_INFO
            </summary>
        </member>
        <member name="T:DirectShowLib.DVDecoderResolution">
            <summary>
            From _DVDECODERRESOLUTION
            </summary>
        </member>
        <member name="T:DirectShowLib.AMIntfSearchFlags">
            <summary>
            From _AM_INTF_SEARCH_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMQueryDecoder">
            <summary>
            From AM_QUERY_DECODER_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DecoderCap">
            <summary>
            From DECODER_CAP_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DecimationUsage">
            <summary>
            From DECIMATION_USAGE
            </summary>
        </member>
        <member name="T:DirectShowLib.AMOverlayFX">
            <summary>
            From AMOVERLAYFX
            </summary>
        </member>
        <member name="T:DirectShowLib.AMResCtlReserveFlags">
            <summary>
            From _AMRESCTL_RESERVEFLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMStreamSelectInfoFlags">
            <summary>
            From _AMSTREAMSELECTINFOFLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMStreamSelectEnableFlags">
            <summary>
            From _AMSTREAMSELECTENABLEFLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.Merit">
            <summary>
            unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.ColorKey">
            <summary>
            From COLORKEY
            </summary>
        </member>
        <member name="T:DirectShowLib.RegPinMedium">
            <summary>
            From REGPINMEDIUM
            </summary>
        </member>
        <member name="T:DirectShowLib.DVInfo">
            <summary>
            From DVINFO
            </summary>
        </member>
        <member name="T:DirectShowLib.DVEncoderResolution">
            <summary>
            From _DVENCODERRESOLUTION
            </summary>
        </member>
        <member name="T:DirectShowLib.DVEncoderFormat">
            <summary>
            From _DVENCODERFORMAT
            </summary>
        </member>
        <member name="T:DirectShowLib.DVEncoderVideoFormat">
            <summary>
            From _DVENCODERVIDEOFORMAT
            </summary>
        </member>
        <member name="T:DirectShowLib.AMRenderExFlags">
            <summary>
            From _AM_RENSDEREXFLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.InterleavingMode">
            <summary>
            From InterleavingMode
            </summary>
        </member>
        <member name="T:DirectShowLib.AMFileSinkFlags">
            <summary>
            From AM_FILESINK_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.KSPropertySupport">
            <summary>
            From KSPROPERTY_SUPPORT_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AMPropertyPin">
            <summary>
            From AMPROPERTY_PIN
            </summary>
        </member>
        <member name="T:DirectShowLib.AMTunerSubChannel">
            <summary>
            From AMTunerSubChannel
            </summary>
        </member>
        <member name="T:DirectShowLib.AMTunerSignalStrength">
            <summary>
            From AMTunerSignalStrength
            </summary>
        </member>
        <member name="T:DirectShowLib.AMTunerModeType">
            <summary>
            From AMTunerModeType
            </summary>
        </member>
        <member name="T:DirectShowLib.AMTunerEventType">
            <summary>
            From AMTunerEventType
            </summary>
        </member>
        <member name="T:DirectShowLib.AnalogVideoStandard">
            <summary>
            From AnalogVideoStandard
            </summary>
        </member>
        <member name="T:DirectShowLib.TunerInputType">
            <summary>
            From TunerInputType
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoControlFlags">
            <summary>
            From VideoControlFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.TVAudioMode">
            <summary>
            From TVAudioMode
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoProcAmpProperty">
            <summary>
            From VideoProcAmpProperty
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoProcAmpFlags">
            <summary>
            From VideoProcAmpFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.PhysicalConnectorType">
            <summary>
            From PhysicalConnectorType
            </summary>
        </member>
        <member name="T:DirectShowLib.AMTVAudioEventType">
            <summary>
            From AMTVAudioEventType
            </summary>
        </member>
        <member name="T:DirectShowLib.CompressionCaps">
            <summary>
            From CompressionCaps
            </summary>
        </member>
        <member name="T:DirectShowLib.VfwCompressDialogs">
            <summary>
            From VfwCompressDialogs
            </summary>
        </member>
        <member name="T:DirectShowLib.VfwCaptureDialogs">
            <summary>
            From VfwCaptureDialogs
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtDevicePort">
            <summary>
            From DEV_PORT_*
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtDeviceCaps">
            <summary>
            From ED_DEVCAP*, ED_DEVTYPE* etc.
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportCaps">
            <summary>
            From ED_TRANSCAP*
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportMediaStates">
            <summary>
            From ED_MEDIA*
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportModes">
            <summary>
            From ED_MODE*
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportStatus">
            <summary>
            From ED_MEDIA* etc.
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportParameters">
            <summary>
            From ED_TRANSBASIC* etc.
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportAudio">
            <summary>
            From ED_AUDIO*
            </summary>
        </member>
        <member name="T:DirectShowLib.ExtTransportEdit">
            <summary>
            From ED_EDIT*
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoStreamConfigCaps">
            <summary>
            From VIDEO_STREAM_CONFIG_CAPS
            </summary>
        </member>
        <member name="T:DirectShowLib.AudioStreamConfigCaps">
            <summary>
            From AUDIO_STREAM_CONFIG_CAPS
            </summary>
        </member>
        <member name="T:DirectShowLib.Quality">
            <summary>
            From Quality
            </summary>
        </member>
        <member name="T:DirectShowLib.QualityMessageType">
            <summary>
            From QualityMessageType
            </summary>
        </member>
        <member name="T:DirectShowLib.CameraControlProperty">
            <summary>
            From CameraControlProperty
            </summary>
        </member>
        <member name="T:DirectShowLib.CameraControlFlags">
            <summary>
            From CameraControlFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.NotifyFlags">
            <summary>
            From define AM_MEDIAEVENT_NONOTIFY
            </summary>
        </member>
        <member name="T:DirectShowLib.OABool">
            <summary>
            From #define OATRUE/OAFALSE
            </summary>
        </member>
        <member name="T:DirectShowLib.WindowStyle">
            <summary>
            From WS_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.WindowStyleEx">
            <summary>
            From WS_EX_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.WindowState">
            <summary>
            From SW_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DispatchFlags">
            <summary>
            From DISPATCH_* defines
            </summary>
        </member>
        <member name="M:DirectShowLib.DES.DESError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DES or DShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="T:DirectShowLib.DES.AMTimeline">
            <summary>
            From CLSID_AMTimeline
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.PropertySetter">
            <summary>
            From CLSID_PropertySetter
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineObj">
            <summary>
            From CLSID_AMTimelineObj
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineSrc">
            <summary>
            From CLSID_AMTimelineSrc
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineTrack">
            <summary>
            From CLSID_AMTimelineTrack
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineComp">
            <summary>
            From CLSID_AMTimelineComp
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineGroup">
            <summary>
            From CLSID_AMTimelineGroup
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineTrans">
            <summary>
            From CLSID_AMTimelineTrans
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AMTimelineEffect">
            <summary>
            From CLSID_AMTimelineEffect
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.RenderEngine">
            <summary>
            From CLSID_RenderEngine
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.SmartRenderEngine">
            <summary>
            From CLSID_SmartRenderEngine
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.AudMixer">
            <summary>
            From CLSID_AudMixer
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.Xml2Dex">
            <summary>
            From CLSID_Xml2Dex
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.MediaLocator">
            <summary>
            From CLSID_MediaLocator
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.MediaDet">
            <summary>
            From CLSID_MediaDet
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DxtCompositor">
            <summary>
            From CLSID_DxtCompositor
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DxtAlphaSetter">
            <summary>
            From CLSID_DxtAlphaSetter
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DxtJpeg">
            <summary>
            From CLSID_DxtJpeg
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.ColorSource">
            <summary>
            From CLSID_ColorSource
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DxtKey">
            <summary>
            From CLSID_DxtKey
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.TimelineMajorType">
            <summary>
            From TIMELINE_MAJOR_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.TimelineInsertMode">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.SFNValidateFlags">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.SCompFmt0">
            <summary>
            From SCompFmt0
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.ResizeFlags">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DexterFTrackSearchFlags">
            <summary>
            From DEXTERF_TRACK_SEARCH_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DexterParam">
            <summary>
            From DEXTER_PARAM
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.ConnectFDynamic">
            <summary>
            From unnamed enum
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DexterValue">
            <summary>
            From DEXTER_VALUE
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.Dexterf">
            <summary>
            From DEXTERF
            </summary>
        </member>
        <member name="T:DirectShowLib.DES.DESErrorCode">
            <summary>
            From DEX_IDS_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.CDef">
            <summary>
            From CDEF_CLASS_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.PinConnectedStatus">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:DirectShowLib.BitmapInfo">
            <summary>
            From BITMAPINFO
            </summary>
        </member>
        <member name="T:DirectShowLib.BitmapInfoHeader">
            <summary>
            From BITMAPINFOHEADER
            </summary>
        </member>
        <member name="T:DirectShowLib.DDPixelFormat">
            <summary>
            From DDPIXELFORMAT
            </summary>
        </member>
        <member name="T:DirectShowLib.DsCAUUID">
            <summary>
            From CAUUID
            </summary>
        </member>
        <member name="M:DirectShowLib.DsCAUUID.ToGuidArray">
            <summary>
            Perform a manual marshaling of pElems to retrieve an array of System.Guid.
            Assume this structure has been already filled by the ISpecifyPropertyPages.GetPages() method.
            </summary>
            <returns>A managed representation of pElems (cElems items)</returns>
        </member>
        <member name="T:DirectShowLib.DsLong">
            <summary>
            DirectShowLib.DsLong is a wrapper class around a <see cref="T:System.Int64"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:DirectShowLib.DsLong.#ctor(System.Int64)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsLong with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:DirectShowLib.DsLong.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsLong Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:DirectShowLib.DsLong.op_Implicit(DirectShowLib.DsLong)~System.Int64">
             <summary>
             Define implicit cast between DirectShowLib.DsLong and System.Int64 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:DirectShowLib.DsLong.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsLong instance
               DsLong dsL = new DsLong(9876543210);
               // Do implicit cast between DsLong and Int64
               long l = dsL;
            
               Console.WriteLine(l.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsLong to be cast</param>
             <returns>A casted System.Int64</returns>
        </member>
        <member name="M:DirectShowLib.DsLong.op_Implicit(System.Int64)~DirectShowLib.DsLong">
             <summary>
             Define implicit cast between System.Int64 and DirectShowLib.DsLong for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt64"/> for similar functionality.
             <code>
               // Define a new Int64 instance
               long l = 9876543210;
               // Do implicit cast between Int64 and DsLong
               DsLong dsl = l;
            
               Console.WriteLine(dsl.ToString());
             </code>
             </summary>
             <param name="g">System.Int64 to be cast</param>
             <returns>A casted DirectShowLib.DsLong</returns>
        </member>
        <member name="M:DirectShowLib.DsLong.ToInt64">
            <summary>
            Get the System.Int64 equivalent to this DirectShowLib.DsLong instance.
            </summary>
            <returns>A System.Int64</returns>
        </member>
        <member name="M:DirectShowLib.DsLong.FromInt64(System.Int64)">
            <summary>
            Get a new DirectShowLib.DsLong instance for a given System.Int64
            </summary>
            <param name="g">The System.Int64 to wrap into a DirectShowLib.DsLong</param>
            <returns>A new instance of DirectShowLib.DsLong</returns>
        </member>
        <member name="T:DirectShowLib.DsGuid">
            <summary>
            DirectShowLib.DsGuid is a wrapper class around a System.Guid value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:DirectShowLib.DsGuid.#ctor">
            <summary>
            Empty constructor. 
            Initialize it with System.Guid.Empty
            </summary>
        </member>
        <member name="M:DirectShowLib.DsGuid.#ctor(System.String)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid string representation.
            </summary>
            <param name="g">A valid System.Guid as string</param>
        </member>
        <member name="M:DirectShowLib.DsGuid.#ctor(System.Guid)">
            <summary>
            Constructor.
            Initialize this instance with a given System.Guid.
            </summary>
            <param name="g">A System.Guid value type</param>
        </member>
        <member name="M:DirectShowLib.DsGuid.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsGuid Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:DirectShowLib.DsGuid.ToString(System.String)">
            <summary>
            Get a string representation of this DirectShowLib.DsGuid Instance with a specific format.
            </summary>
            <param name="format"><see cref="M:System.Guid.ToString"/> for a description of the format parameter.</param>
            <returns>A string representing this instance according to the format parameter</returns>
        </member>
        <member name="M:DirectShowLib.DsGuid.op_Implicit(DirectShowLib.DsGuid)~System.Guid">
             <summary>
             Define implicit cast between DirectShowLib.DsGuid and System.Guid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:DirectShowLib.DsGuid.ToGuid"/> for similar functionality.
             <code>
               // Define a new DsGuid instance
               DsGuid dsG = new DsGuid("{33D57EBF-7C9D-435e-A15E-D300B52FBD91}");
               // Do implicit cast between DsGuid and Guid
               Guid g = dsG;
            
               Console.WriteLine(g.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsGuid to be cast</param>
             <returns>A casted System.Guid</returns>
        </member>
        <member name="M:DirectShowLib.DsGuid.op_Implicit(System.Guid)~DirectShowLib.DsGuid">
             <summary>
             Define implicit cast between System.Guid and DirectShowLib.DsGuid for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:DirectShowLib.DsGuid.FromGuid(System.Guid)"/> for similar functionality.
             <code>
               // Define a new Guid instance
               Guid g = new Guid("{B9364217-366E-45f8-AA2D-B0ED9E7D932D}");
               // Do implicit cast between Guid and DsGuid
               DsGuid dsG = g;
            
               Console.WriteLine(dsG.ToString());
             </code>
             </summary>
             <param name="g">System.Guid to be cast</param>
             <returns>A casted DirectShowLib.DsGuid</returns>
        </member>
        <member name="M:DirectShowLib.DsGuid.ToGuid">
            <summary>
            Get the System.Guid equivalent to this DirectShowLib.DsGuid instance.
            </summary>
            <returns>A System.Guid</returns>
        </member>
        <member name="M:DirectShowLib.DsGuid.FromGuid(System.Guid)">
            <summary>
            Get a new DirectShowLib.DsGuid instance for a given System.Guid
            </summary>
            <param name="g">The System.Guid to wrap into a DirectShowLib.DsGuid</param>
            <returns>A new instance of DirectShowLib.DsGuid</returns>
        </member>
        <member name="T:DirectShowLib.DsInt">
            <summary>
            DirectShowLib.DsInt is a wrapper class around a <see cref="T:System.Int32"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:DirectShowLib.DsInt.#ctor(System.Int32)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsInt with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:DirectShowLib.DsInt.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsInt Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:DirectShowLib.DsInt.op_Implicit(DirectShowLib.DsInt)~System.Int32">
             <summary>
             Define implicit cast between DirectShowLib.DsInt and System.Int64 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsInt.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsInt instance
               DsInt dsI = new DsInt(0x12345678);
               // Do implicit cast between DsInt and Int32
               int i = dsI;
            
               Console.WriteLine(i.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsInt to be cast</param>
             <returns>A casted System.Int32</returns>
        </member>
        <member name="M:DirectShowLib.DsInt.op_Implicit(System.Int32)~DirectShowLib.DsInt">
             <summary>
             Define implicit cast between System.Int32 and DirectShowLib.DsInt for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt32"/> for similar functionality.
             <code>
               // Define a new Int32 instance
               int i = 0x12345678;
               // Do implicit cast between Int64 and DsInt
               DsInt dsI = i;
            
               Console.WriteLine(dsI.ToString());
             </code>
             </summary>
             <param name="g">System.Int32 to be cast</param>
             <returns>A casted DirectShowLib.DsInt</returns>
        </member>
        <member name="M:DirectShowLib.DsInt.ToInt32">
            <summary>
            Get the System.Int32 equivalent to this DirectShowLib.DsInt instance.
            </summary>
            <returns>A System.Int32</returns>
        </member>
        <member name="M:DirectShowLib.DsInt.FromInt32(System.Int32)">
            <summary>
            Get a new DirectShowLib.DsInt instance for a given System.Int32
            </summary>
            <param name="g">The System.Int32 to wrap into a DirectShowLib.DsInt</param>
            <returns>A new instance of DirectShowLib.DsInt</returns>
        </member>
        <member name="T:DirectShowLib.DsShort">
            <summary>
            DirectShowLib.DsShort is a wrapper class around a <see cref="T:System.Int16"/> value type.
            </summary>
            <remarks>
            This class is necessary to enable null paramters passing.
            </remarks>
        </member>
        <member name="M:DirectShowLib.DsShort.#ctor(System.Int16)">
            <summary>
            Constructor
            Initialize a new instance of DirectShowLib.DsShort with the Value parameter
            </summary>
            <param name="Value">Value to assign to this new instance</param>
        </member>
        <member name="M:DirectShowLib.DsShort.ToString">
            <summary>
            Get a string representation of this DirectShowLib.DsShort Instance.
            </summary>
            <returns>A string representing this instance</returns>
        </member>
        <member name="M:DirectShowLib.DsShort.op_Implicit(DirectShowLib.DsShort)~System.Int16">
             <summary>
             Define implicit cast between DirectShowLib.DsShort and System.Int16 for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsShort.ToInt64"/> for similar functionality.
             <code>
               // Define a new DsShort instance
               DsShort dsS = new DsShort(0x1234);
               // Do implicit cast between DsShort and Int16
               short s = dsS;
            
               Console.WriteLine(s.ToString());
             </code>
             </summary>
             <param name="g">DirectShowLib.DsShort to be cast</param>
             <returns>A casted System.Int16</returns>
        </member>
        <member name="M:DirectShowLib.DsShort.op_Implicit(System.Int16)~DirectShowLib.DsShort">
             <summary>
             Define implicit cast between System.Int16 and DirectShowLib.DsShort for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="!:DirectShowLib.DsGuid.FromInt16"/> for similar functionality.
             <code>
               // Define a new Int16 instance
               short s = 0x1234;
               // Do implicit cast between Int64 and DsShort
               DsShort dsS = s;
            
               Console.WriteLine(dsS.ToString());
             </code>
             </summary>
             <param name="g">System.Int16 to be cast</param>
             <returns>A casted DirectShowLib.DsShort</returns>
        </member>
        <member name="M:DirectShowLib.DsShort.ToInt16">
            <summary>
            Get the System.Int16 equivalent to this DirectShowLib.DsShort instance.
            </summary>
            <returns>A System.Int16</returns>
        </member>
        <member name="M:DirectShowLib.DsShort.FromInt16(System.Int16)">
            <summary>
            Get a new DirectShowLib.DsShort instance for a given System.Int64
            </summary>
            <param name="g">The System.Int16 to wrap into a DirectShowLib.DsShort</param>
            <returns>A new instance of DirectShowLib.DsShort</returns>
        </member>
        <member name="T:DirectShowLib.DsRect">
            <summary>
            DirectShowLib.DsRect is a managed representation of the Win32 RECT structure.
            </summary>
        </member>
        <member name="M:DirectShowLib.DsRect.#ctor">
            <summary>
            Empty contructor. Initialize all fields to 0
            </summary>
        </member>
        <member name="M:DirectShowLib.DsRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A parametred constructor. Initialize fields with given values.
            </summary>
            <param name="left">the left value</param>
            <param name="top">the top value</param>
            <param name="right">the right value</param>
            <param name="bottom">the bottom value</param>
        </member>
        <member name="M:DirectShowLib.DsRect.#ctor(System.Drawing.Rectangle)">
            <summary>
            A parametred constructor. Initialize fields with a given <see cref="T:System.Drawing.Rectangle"/>.
            </summary>
            <param name="rectangle">A <see cref="T:System.Drawing.Rectangle"/></param>
            <remarks>
            Warning, DsRect define a rectangle by defining two of his corners and <see cref="T:System.Drawing.Rectangle"/> define a rectangle with his upper/left corner, his width and his height.
            </remarks>
        </member>
        <member name="M:DirectShowLib.DsRect.ToString">
            <summary>
            Provide de string representation of this DsRect instance
            </summary>
            <returns>A string formated like this : [left, top - right, bottom]</returns>
        </member>
        <member name="M:DirectShowLib.DsRect.op_Implicit(DirectShowLib.DsRect)~System.Drawing.Rectangle">
             <summary>
             Define implicit cast between DirectShowLib.DsRect and System.Drawing.Rectangle for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:DirectShowLib.DsRect.ToRectangle"/> for similar functionality.
             <code>
               // Define a new Rectangle instance
               Rectangle r = new Rectangle(0, 0, 100, 100);
               // Do implicit cast between Rectangle and DsRect
               DsRect dsR = r;
            
               Console.WriteLine(dsR.ToString());
             </code>
             </summary>
             <param name="r">a DsRect to be cast</param>
             <returns>A casted System.Drawing.Rectangle</returns>
        </member>
        <member name="M:DirectShowLib.DsRect.op_Implicit(System.Drawing.Rectangle)~DirectShowLib.DsRect">
             <summary>
             Define implicit cast between System.Drawing.Rectangle and DirectShowLib.DsRect for languages supporting this feature.
             VB.Net doesn't support implicit cast. <see cref="M:DirectShowLib.DsRect.FromRectangle(System.Drawing.Rectangle)"/> for similar functionality.
             <code>
               // Define a new DsRect instance
               DsRect dsR = new DsRect(0, 0, 100, 100);
               // Do implicit cast between DsRect and Rectangle
               Rectangle r = dsR;
            
               Console.WriteLine(r.ToString());
             </code>
             </summary>
             <param name="r">A System.Drawing.Rectangle to be cast</param>
             <returns>A casted DsRect</returns>
        </member>
        <member name="M:DirectShowLib.DsRect.ToRectangle">
            <summary>
            Get the System.Drawing.Rectangle equivalent to this DirectShowLib.DsRect instance.
            </summary>
            <returns>A System.Drawing.Rectangle</returns>
        </member>
        <member name="M:DirectShowLib.DsRect.FromRectangle(System.Drawing.Rectangle)">
            <summary>
            Get a new DirectShowLib.DsRect instance for a given <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="r">The <see cref="T:System.Drawing.Rectangle"/> used to initialize this new DirectShowLib.DsGuid</param>
            <returns>A new instance of DirectShowLib.DsGuid</returns>
        </member>
        <member name="M:DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DirectShow error text
            is available, it is used to build the exception, otherwise a generic com error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DirectShowLib.DsError.GetErrorText(System.Int32)" -->
        <member name="M:DirectShowLib.DsUtils.GetPinCategory(DirectShowLib.IPin)">
            <summary>
            Returns the PinCategory of the specified pin.  Usually a member of PinCategory.  Not all pins have a category.
            </summary>
            <param name="pPin"></param>
            <returns>Guid indicating pin category or Guid.Empty on no category.  Usually a member of PinCategory</returns>
        </member>
        <member name="M:DirectShowLib.DsUtils.FreeAMMediaType(DirectShowLib.AMMediaType)">
            <summary>
             Free the nested structures and release any
             COM objects within an AMMediaType struct.
            </summary>
        </member>
        <member name="M:DirectShowLib.DsUtils.FreePinInfo(DirectShowLib.PinInfo)">
            <summary>
             Free the nested interfaces within a PinInfo struct.
            </summary>
        </member>
        <member name="P:DirectShowLib.DsDevice.DevicePath">
            <summary>
            Returns a unique identifier for a device
            </summary>
        </member>
        <member name="P:DirectShowLib.DsDevice.ClassID">
            <summary>
            Returns the ClassID for a device
            </summary>
        </member>
        <member name="M:DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid)">
            <summary>
            Returns an array of DsDevices of type devcat.
            </summary>
            <param name="cat">Any one of FilterCategory</param>
        </member>
        <member name="M:DirectShowLib.DsDevice.GetPropBagValue(System.String)">
            <summary>
            Get a specific PropertyBag value from a moniker
            </summary>
            <param name="sPropName">The name of the value to retrieve</param>
            <returns>String or null on error</returns>
        </member>
        <member name="M:DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter,DirectShowLib.PinDirection,System.Int32)">
            <summary>
            Scans a filter's pins looking for a pin in the specified direction
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vDir">The direction to find</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin in the specified direction)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter,System.String)">
            <summary>
            Scans a filter's pins looking for a pin with the specified name
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vPinName">The pin name to find</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter,System.Guid,System.Int32)">
            <summary>
            Scan's a filter's pins looking for a pin with the specified category
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="guidPinCat">The guid from PinCategory to scan for</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin of the specified category)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter,DirectShowLib.PinConnectedStatus,System.Int32)">
            <summary>
            Scans a filter's pins looking for a pin with the specified connection status
            </summary>
            <param name="vSource">The filter to scan</param>
            <param name="vStat">The status to find (connected/unconnected)</param>
            <param name="iIndex">Zero based index (ie 2 will return the third pin with the specified status)</param>
            <returns>The matching pin, or null if not found</returns>
        </member>
        <member name="M:DirectShowLib.DsToString.AMMediaTypeToString(DirectShowLib.AMMediaType)">
            <summary>
            Produces a usable string that describes the MediaType object
            </summary>
            <returns>Concatenation of MajorType + SubType + FormatType + Fixed + Temporal + SampleSize.ToString</returns>
        </member>
        <member name="M:DirectShowLib.DsToString.MediaTypeToString(System.Guid)">
            <summary>
            Converts AMMediaType.MajorType Guid to a readable string
            </summary>
            <returns>MajorType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:DirectShowLib.DsToString.MediaSubTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.SubType Guid to a readable string
            </summary>
            <returns>SubType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:DirectShowLib.DsToString.MediaFormatTypeToString(System.Guid)">
            <summary>
            Converts the AMMediaType.FormatType Guid to a readable string
            </summary>
            <returns>FormatType Guid as a readable string or Guid if unrecognized</returns>
        </member>
        <member name="M:DirectShowLib.DsToString.WalkClass(System.Type,System.Guid)">
            <summary>
            Use reflection to walk a class looking for a property containing a specified guid
            </summary>
            <param name="MyType">Class to scan</param>
            <param name="guid">Guid to scan for</param>
            <returns>String representing property name that matches, or Guid.ToString() for no match</returns>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdDomain">
            <summary>
            From DVD_DOMAIN
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdMenuId">
            <summary>
            From DVD_MENU_ID
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdDiscSide">
            <summary>
            From DVD_DISC_SIDE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdPreferredDisplayMode">
            <summary>
            From DVD_PREFERRED_DISPLAY_MODE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdFrameRate">
            <summary>
            From DVD_FRAMERATE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdTimeCodeFlags">
            <summary>
            From DVD_TIMECODE_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.ValidUOPFlag">
            <summary>
            From VALID_UOP_FLAG
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdCmdFlags">
            <summary>
            From DVD_CMD_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdOptionFlag">
            <summary>
            From DVD_OPTION_FLAG
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdRelativeButton">
            <summary>
            From DVD_RELATIVE_BUTTON
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdParentalLevel">
            <summary>
            From DVD_PARENTAL_LEVEL
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdAudioLangExt">
            <summary>
            From DVD_AUDIO_LANG_EXT
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdSubPictureLangExt">
            <summary>
            From DVD_SUBPICTURE_LANG_EXT
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdAudioAppMode">
            <summary>
            From DVD_AUDIO_APPMODE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdAudioFormat">
            <summary>
            From DVD_AUDIO_FORMAT
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdKaraokeDownMix">
            <summary>
            From DVD_KARAOKE_DOWNMIX
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdKaraokeContents">
            <summary>
            From DVD_KARAOKE_CONTENTS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdKaraokeAssignment">
            <summary>
            From DVD_KARAOKE_ASSIGNMENT
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdVideoCompression">
            <summary>
            From DVD_VIDEO_COMPRESSION
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdSubPictureType">
            <summary>
            From DVD_SUBPICTURE_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdSubPictureCoding">
            <summary>
            From DVD_SUBPICTURE_CODING
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdTitleAppMode">
            <summary>
            From DVD_TITLE_APPMODE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdTextStringType">
            <summary>
            From DVD_TextStringType
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdTextCharSet">
            <summary>
            From DVD_TextCharSet
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdAudioCaps">
            <summary>
            From DVD_AUDIO_CAPS_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.AMDvdGraphFlags">
            <summary>
            From AM_DVD_GRAPH_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.AMDvdStreamFlags">
            <summary>
            From AM_DVD_STREAM_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.GPRMArray">
            <summary>
            From GPRMARRAY
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.SPRMArray">
            <summary>
            From SPRMARRAY
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdHMSFTimeCode">
            <summary>
            From DVD_HMSF_TIMECODE
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdPlaybackLocation2">
            <summary>
            From DVD_PLAYBACK_LOCATION2
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdAudioAttributes">
            <summary>
            From DVD_AudioAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdMUAMixingInfo">
            <summary>
            From DVD_MUA_MixingInfo
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdMUACoeff">
            <summary>
            From DVD_MUA_Coeff
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdMultichannelAudioAttributes">
            <summary>
            From DVD_MultichannelAudioAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdKaraokeAttributes">
            <summary>
            From DVD_KaraokeAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdVideoAttributes">
            <summary>
            From DVD_VideoAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdSubpictureAttributes">
            <summary>
            From DVD_SubpictureAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdTitleAttributes">
            <summary>
            From DVD_TitleAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdMenuAttributes">
            <summary>
            From DVD_MenuAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.DvdDecoderCaps">
            <summary>
            From DVD_DECODER_CAPS
            </summary>
        </member>
        <member name="T:DirectShowLib.Dvd.AMDvdRenderStatus">
            <summary>
            From AM_DVD_RENDERSTATUS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMPinFlowControl">
            <summary>
            From _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMGraphConfigReconnect">
            <summary>
            From AM_GRAPH_CONFIG_RECONNECT_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMFilterFlags">
            <summary>
            From _AM_FILTER_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.RemFilterFlags">
            <summary>
            From _REM_FILTER_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.AMLine21CCLevel">
            <summary>
            From AM_LINE21_CCLEVEL
            </summary>
        </member>
        <member name="T:DirectShowLib.AMLine21CCService">
            <summary>
            From AM_LINE21_CCSERVICE
            </summary>
        </member>
        <member name="T:DirectShowLib.AMLine21CCState">
            <summary>
            From AM_LINE21_CCSTATE
            </summary>
        </member>
        <member name="T:DirectShowLib.AMLine21DrawBGMode">
            <summary>
            From AM_LINE21_DRAWBGMODE
            </summary>
        </member>
        <member name="T:DirectShowLib.WmtVersion">
            <summary>Defines the versions of the Windows Media Format SDK.</summary>
        </member>
        <member name="F:DirectShowLib.WmtVersion.WmtVersion40">
            <summary>Compatible with version 4 of the Windows Media Format SDK.</summary>
        </member>
        <member name="F:DirectShowLib.WmtVersion.WmtVersion70">
            <summary>Compatible with the Windows Media Format 7 SDK.</summary>
        </member>
        <member name="F:DirectShowLib.WmtVersion.WmtVersion80">
            <summary>Compatible with the Windows Media Format 8.2 SDK.</summary>
        </member>
        <member name="F:DirectShowLib.WmtVersion.WmtVersion90">
            <summary>Compatible with the Windows Media Format 9 SDK.</summary>
        </member>
        <member name="T:DirectShowLib.IWMProfile">
            <summary>Primary interface for a Windows Media profile object</summary>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetVersion">
            <summary>Retrieves the version number of the Windows Media Format SDK used to create the profile. </summary>
            <returns>Specifies the version of the Windows Media Format SDK that was used to create the profile.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetName(System.IntPtr,System.UInt32@)">
            <summary>Retrieves the name of a profile.</summary>
            <param name="pwszName">String containing the name.  Pass null to retrieve the length of the name.</param>
            <param name="pcchName">
            On input, specifies the length of the pwszName buffer. On output, if the method succeeds, 
            specifies a pointer to the length of the name, including the terminating null character.
            </param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.SetName(System.String)">
            <summary>The SetName method specifies the name of a profile.</summary>
            <param name="pwszName">String containing the name. Profile names are limited to 256 wide characters.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetDescription(System.IntPtr,System.UInt32@)">
            <summary>
            The GetDescription method retrieves the profile description. The description is a string 
            that contains an explanation of what the profile should be used for.
            </summary>
            <param name="pwszDescription">String containing the description. Pass null to retrieve the required length for the description.</param>
            <param name="pcchDescription">
            Specifies the length of the pwszDescription string. On output, if the method succeeds, 
            specifies a pointer to a count of the number of characters in the name, including the 
            terminating null character.
            </param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.SetDescription(System.String)">
            <summary>
            The SetDescription method specifies the description of a profile. The description is a 
            string that contains an explanation of what the profile should be used for.
            </summary>
            <param name="pwszDescription">
            String containing the description. Profile descriptions are limited to 1024 wide characters.
            </param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetStreamCount">
            <summary>The GetStreamCount method retrieves the number of streams in a profile.</summary>
            <returns>Count of streams</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetStream(System.UInt32)">
            <summary>The GetStream method retrieves a stream from the profile.</summary>
            <param name="dwStreamIndex">The stream index.</param>
            <returns>IWMStreamConfig interface of the stream configuration object that describes the specified stream.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetStreamByNumber(System.UInt16)">
            <summary>The GetStreamByNumber method retrieves a stream from the profile.</summary>
            <param name="wStreamNum">The stream number.</param>
            <returns>IWMStreamConfig interface of the stream configuration object that describes the specified stream.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.RemoveStream(System.IntPtr)">
            <summary>Removes a stream from the profile.</summary>
            <param name="pConfig">IWMStreamConfig interface of the stream configuration object that describes the stream you want to remove.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.RemoveStreamByNumber(System.UInt16)">
            <summary>The RemoveStreamByNumber method removes a stream from the profile.</summary>
            <param name="wStreamNum">The stream number.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.AddStream(System.IntPtr)">
            <summary>Adds a stream to the profile by copying the stream configuration details into the profile.</summary>
            <param name="pConfig">IWMStreamConfig interface of the stream configuration object to be added to the profile.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.ReconfigStream(System.IntPtr)">
            <summary>Enables changes made to a stream configuration to be included in the profile.</summary>
            <param name="pConfig">IWMStreamConfig interface of the stream configuration object for the stream you want to reconfigure.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.CreateNewStream(System.Guid@)">
            <summary>Creates a stream configuration object.</summary>
            <param name="guidStreamType">Major media type for the stream to be created.</param>
            <returns>IWMStreamConfig interface of the created stream configuration object.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetMutualExclusionCount">
            <summary>Retrieves the number of mutual exclusion objects in the profile.</summary>
            <returns>Count of mutual exclusions.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.GetMutualExclusion(System.UInt32)">
            <summary>Retrieves a mutual exclusion object from the profile.</summary>
            <param name="dwMEIndex">The index of the mutual exclusion object.</param>
            <returns>IWMMutualExclusion interface of the mutual exclusion object specified by the index passed as dwMEIndex.</returns>
        </member>
        <member name="M:DirectShowLib.IWMProfile.RemoveMutualExclusion(System.IntPtr)">
            <summary>Removes a mutual exclusion object from the profile.</summary>
            <param name="pMe">IWMMutualExclusion interface of the mutual exclusion object you want to remove.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.AddMutualExclusion(System.IntPtr)">
            <summary>Adds a mutual exclusion object to the profile.</summary>
            <param name="pMe">IWMMutualExclusion interface of the mutual exclusion object to include in the profile.</param>
        </member>
        <member name="M:DirectShowLib.IWMProfile.CreateNewMutualExclusion">
            <summary>Creates a mutual exclusion object.</summary>
            <returns>IWMMutualExclusion interface of the new mutual exclusion object.</returns>
        </member>
        <member name="T:DirectShowLib.DMO.DMOOutputDataBufferFlags">
            <summary>
            From _DMO_OUTPUT_DATA_BUFFER_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOEnumerator">
            <summary>
            From DMO_ENUM_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMORegisterFlags">
            <summary>
            From DMO_REGISTER_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOProcessOutput">
            <summary>
            From DMO_PROCESS_OUTPUT_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOInputDataBuffer">
            <summary>
            From DMO_INPUT_DATA_BUFFER_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOInplaceProcess">
            <summary>
            From DMO_INPLACE_PROCESS_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOInputStreamInfo">
            <summary>
            From DMO_INPUT_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOOutputStreamInfo">
            <summary>
            From DMO_OUTPUT_STREAM_INFO_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOSetType">
            <summary>
            From _DMO_SET_TYPE_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOInputStatusFlags">
            <summary>
            From DMO_INPUT_STATUS_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOVideoOutputStream">
            <summary>
            From DMO_VIDEO_OUTPUT_STREAM_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOPartialMediatype">
            <summary>
            From DMO_PARTIAL_MEDIATYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.DMOOutputDataBuffer">
            <summary>
            From DMO_OUTPUT_DATA_BUFFER
            </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.AudioDecoder">
            <summary> DMOCATEGORY_AUDIO_DECODER </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.AudioEncoder">
            <summary> DMOCATEGORY_AUDIO_ENCODER </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.VideoDecoder">
            <summary> DMOCATEGORY_VIDEO_DECODER </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.VideoEncoder">
            <summary> DMOCATEGORY_VIDEO_ENCODER </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.AudioEffect">
            <summary> DMOCATEGORY_AUDIO_EFFECT </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.VideoEffect">
            <summary> DMOCATEGORY_VIDEO_EFFECT </summary>
        </member>
        <member name="F:DirectShowLib.DMO.DMOCategory.AudioCaptureEffect">
            <summary> DMOCATEGORY_AUDIO_CAPTURE_EFFECT </summary>
        </member>
        <member name="M:DirectShowLib.DMO.DMOError.ThrowExceptionForHR(System.Int32)">
            <summary>
            If hr has a "failed" status code (E_*), throw an exception.  Note that status
            messages (S_*) are not considered failure codes.  If DMO or DShow error text
            is available, it is used to build the exception, otherwise a generic COM error
            is thrown.
            </summary>
            <param name="hr">The HRESULT to check</param>
        </member>
        <member name="F:DirectShowLib.DMO.MediaParamTimeFormat.Reference">
            <summary> GUID_TIME_REFERENCE </summary>
        </member>
        <member name="F:DirectShowLib.DMO.MediaParamTimeFormat.Music">
            <summary> GUID_TIME_MUSIC </summary>
        </member>
        <member name="F:DirectShowLib.DMO.MediaParamTimeFormat.Samples">
            <summary> GUID_TIME_SAMPLES, audio capture category </summary>
        </member>
        <member name="T:DirectShowLib.DMO.MPData">
            <summary>
            From MP_DATA
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.MPEnvelopeSegment">
            <summary>
            From MP_ENVELOPE_SEGMENT
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.MPFlags">
            <summary>
            From MPF_ENVLP_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.MPType">
            <summary>
            From MP_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.MPCaps">
            <summary>
            From MP_CAPS_CURVE* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DMO.ParamInfo">
            <summary>
            From MP_PARAMINFO
            </summary>
        </member>
        <member name="T:DirectShowLib.KSMultipleItem">
            <summary>
            From KSMULTIPLE_ITEM - Note that data is returned in the memory IMMEDIATELY following this struct.
            The Size parm indicates ths size of the KSMultipleItem plus the extra bytes.
            </summary>
        </member>
        <member name="M:DirectShowLib.IKsPin.KsQueryMediums(System.IntPtr@)">
            <summary>
            The caller must free the returned structures, using the CoTaskMemFree function
            </summary>
        </member>
        <member name="T:DirectShowLib.MixerData">
            <summary>
            From MIXER_DATA_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.MixerState">
            <summary>
            From MIXER_STATE_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DDColor">
            <summary>
            From DDCOLOR_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.DDColorControl">
            <summary>
            From DDCOLORCONTROL
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGRequestType">
            <summary>
            From MPEG_REQUEST_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGContextType">
            <summary>
            From MPEG_CONTEXT_TYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGPacketList">
            <summary>
            From MPEG_PACKET_LIST
            </summary>
        </member>
        <member name="T:DirectShowLib.DSMCCFilterOptions">
            <summary>
            From DSMCC_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:DirectShowLib.ATSCFilterOptions">
            <summary>
            From ATSC_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG2Filter">
            <summary>
            From MPEG2_FILTER
            </summary>
        </member>
        <member name="T:DirectShowLib.DVB_EIT_FILTER_OPTIONS">
            <summary>
            From DVB_EIT_FILTER_OPTIONS
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG2Filter2">
            <summary>
            From MPEG2_FILTER2
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGContextUnion">
            <summary>
            From unnamed union
            </summary>
        </member>
        <member name="T:DirectShowLib.BCSDeMux">
            <summary>
            From MPEG_BCS_DEMUX
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGWinSock">
            <summary>
            From MPEG_WINSOCK
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGContext">
            <summary>
            From MPEG_CONTEXT
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGStreamBuffer">
            <summary>
            From MPEG_STREAM_BUFFER
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTLevel">
            <summary>
            From AM_WST_LEVEL
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTService">
            <summary>
            From AM_WST_SERVICE
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTState">
            <summary>
            From AM_WST_STATE
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTDrawBGMode">
            <summary>
            From AM_WST_DRAWBGMODE
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGAudioDivider">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGAudioDual">
            <summary>
            From AM_MPEG_AUDIO_DUAL_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGAudioAccuracy">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEGAudioChannels">
            <summary>
            Not from DirectShow
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTPage">
            <summary>
            From AM_WST_PAGE
            </summary>
        </member>
        <member name="T:DirectShowLib.AcmMpegHeadLayer">
            <summary>
            From ACM_MPEG_LAYER* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AcmMpegHeadMode">
            <summary>
            From ACM_MPEG_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.AcmMpegHeadFlags">
            <summary>
            From ACM_MPEG_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.WaveMask">
            <summary>
            From SPEAKER_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG1WaveFormat">
            <summary>
            From MPEG1WAVEFORMAT
            </summary>
        </member>
        <member name="T:DirectShowLib.WaveFormatExtensible">
            <summary>
            From WAVEFORMATEXTENSIBLE
            </summary>
        </member>
        <member name="T:DirectShowLib.ASFWriterConfig">
            <summary>
            From _AM_ASFWRITERCONFIG_PARAM
            </summary>
        </member>
        <member name="T:DirectShowLib.AMInterlace">
            <summary>
            From AMINTERLACE_*
            </summary>
        </member>
        <member name="T:DirectShowLib.AMCopyProtect">
            <summary>
            From AMCOPYPROTECT_*
            </summary>
        </member>
        <member name="T:DirectShowLib.AMControl">
            <summary>
            From AMCONTROL_*
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoInfoHeader">
            <summary>
            From VIDEOINFOHEADER
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoInfoHeader2">
            <summary>
            From VIDEOINFOHEADER2
            </summary>
        </member>
        <member name="T:DirectShowLib.WaveFormatEx">
            <summary>
            From WAVEFORMATEX
            </summary>
        </member>
        <member name="M:DirectShowLib.ISampleGrabberCB.SampleCB(System.Double,DirectShowLib.IMediaSample)">
            <summary>
            When called, callee must release pSample
            </summary>
        </member>
        <member name="T:DirectShowLib.AMExtendedSeekingCapabilities">
            <summary>
            From AMExtendedSeekingCapabilities
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.RecordingType">
            <summary>
            From unnamed structure
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.StreamBufferAttrDataType">
            <summary>
            From STREAMBUFFER_ATTR_DATATYPE
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.StreamBufferEventCode">
            <summary>
            From unnamed structure
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.StreamBufferRecording">
            <summary>
            From g_wszStreamBufferRecording* static const WCHAR
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.StreamBufferAttribute">
            <summary>
            From STREAMBUFFER_ATTRIBUTE
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.SBEPinData">
            <summary>
            From SBE_PIN_DATA
            </summary>
        </member>
        <member name="F:DirectShowLib.SBE.SBEEvent.RecControlStarted">
            <summary> EVENTID_SBE2RecControlStarted </summary>
        </member>
        <member name="F:DirectShowLib.SBE.SBEEvent.RecControlStopped">
            <summary> EVENTID_SBE2RecControlStopped </summary>
        </member>
        <member name="F:DirectShowLib.SBE.SBEEvent.StreamDescEvent">
            <summary> SBE2_STREAM_DESC_EVENT </summary>
        </member>
        <member name="F:DirectShowLib.SBE.SBEEvent.V1StreamsCreationEvent">
            <summary> SBE2_V1_STREAMS_CREATION_EVENT </summary>
        </member>
        <member name="F:DirectShowLib.SBE.SBEEvent.V2StreamsCreationEvent">
            <summary> SBE2_V2_STREAMS_CREATION_EVENT </summary>
        </member>
        <member name="T:DirectShowLib.SBE.CrossbarDefaultFlags">
            <summary>
            From CROSSBAR_DEFAULT_FLAGS
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.SBE2_StreamDesc">
            <summary>
            From SBE2_STREAM_DESC
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE.DVRStreamDesc">
            <summary>
            From DVR_STREAM_DESC
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferRecordingAttributes">
            <summary>
            CLSID_StreamBufferRecordingAttributes
            </summary>
        </member>
        <member name="T:DirectShowLib.AudioRecord">
            <summary>
            CLSID_AudioRecord
            </summary>
        </member>
        <member name="T:DirectShowLib.AVICo">
            <summary>
            CLSID_AVICo
            </summary>
        </member>
        <member name="T:DirectShowLib.AVIDoc">
            <summary>
            CLSID_AVIDoc
            </summary>
        </member>
        <member name="T:DirectShowLib.AviReader">
            <summary>
            CLSID_AviReader
            </summary>
        </member>
        <member name="T:DirectShowLib.FGControl">
            <summary>
            CLSID_FGControl 
            </summary>
        </member>
        <member name="T:DirectShowLib.FileSource">
            <summary>
            CLSID_FileSource
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterMapper">
            <summary>
            CLSID_FilterMapper
            </summary>
        </member>
        <member name="T:DirectShowLib.ProtoFilterGraph">
            <summary>
            CLSID_ProtoFilterGraph
            </summary>
        </member>
        <member name="T:DirectShowLib.MOVReader">
            <summary>
            CLSID_MOVReader
            </summary>
        </member>
        <member name="T:DirectShowLib.VPObject">
            <summary>
            CLSID_VPObject
            </summary>
        </member>
        <member name="T:DirectShowLib.VPVBIObject">
            <summary>
            CLSID_VPVBIObject
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG1Doc">
            <summary>
            CLSID_MPEG1Doc
            </summary>
        </member>
        <member name="T:DirectShowLib.TextRender">
            <summary>
            CLSID_TextRender
            </summary>
        </member>
        <member name="T:DirectShowLib.CDeviceMoniker">
            <summary>
            CLSID_CDeviceMoniker
            </summary>
        </member>
        <member name="T:DirectShowLib.DTFilter">
            <summary>
            CLSID_DTFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.ETFilter">
            <summary>
            CLSID_ETFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterGraphPrivateThread">
            <summary>
            CLSID_FilterGraphPrivateThread
            </summary>
        </member>
        <member name="T:DirectShowLib.DtvCcFilter">
            <summary>
            CLSID_DtvCcFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.MSTVCaptionFilter">
            <summary>
            CLSID_MSTVCaptionFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.CreateDevEnum">
            <summary>
            CLSID_SystemDeviceEnum
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterGraph">
            <summary>
            CLSID_FilterGraph
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterGraphNoThread">
            <summary>
            CLSID_FilterGraphNoThread
            </summary>
        </member>
        <member name="T:DirectShowLib.CaptureGraphBuilder2">
            <summary>
            CLSID_CaptureGraphBuilder2
            </summary>
        </member>
        <member name="T:DirectShowLib.DvdGraphBuilder">
            <summary>
            CLSID_DvdGraphBuilder
            </summary>
        </member>
        <member name="T:DirectShowLib.CaptureGraphBuilder">
            <summary>
            CLSID_CaptureGraphBuilder
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferConfig">
            <summary>
            CLSID_StreamBufferConfig
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferComposeRecording">
            <summary>
            CLSID_StreamBufferComposeRecording
            </summary>
        </member>
        <member name="T:DirectShowLib.SeekingPassThru">
            <summary>
            CLSID_SeekingPassThru
            </summary>
        </member>
        <member name="T:DirectShowLib.FilterMapper2">
            <summary>
            CLSID_FilterMapper2
            </summary>
        </member>
        <member name="T:DirectShowLib.MemoryAllocator">
            <summary>
            CLSID_MemoryAllocator
            </summary>
        </member>
        <member name="T:DirectShowLib.MediaPropertyBag">
            <summary>
            CLSID_MediaPropertyBag
            </summary>
        </member>
        <member name="T:DirectShowLib.DVDState">
            <summary>
            CLSID_DVDState
            </summary>
        </member>
        <member name="T:DirectShowLib.SectionList">
            <summary>
            CLSID_SectionList
            </summary>
        </member>
        <member name="T:DirectShowLib.Mpeg2Stream">
            <summary>
            CLSID_Mpeg2Stream
            </summary>
        </member>
        <member name="T:DirectShowLib.Mpeg2Data">
            <summary>
            CLSID_Mpeg2Data
            </summary>
        </member>
        <member name="T:DirectShowLib.SAMIParser">
            <summary>
            Unnamed clsid
            </summary>
        </member>
        <member name="T:DirectShowLib.InternalScriptCommandRenderer">
            <summary>
            Unnamed clsid
            </summary>
        </member>
        <member name="T:DirectShowLib.BroadcastEventService">
            <summary>
            CLSID_BroadcastEventService
            </summary>
        </member>
        <member name="T:DirectShowLib.AtscPsipParser">
            <summary>
            CLSID_AtscPsipParser
            </summary>
        </member>
        <member name="T:DirectShowLib.DvbSiParser">
            <summary>
            CLSID_DvbSiParser
            </summary>
        </member>
        <member name="T:DirectShowLib.DMOWrapperFilter">
            <summary>
            CLSID_DMOWrapperFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferSink">
            <summary>
            CLSID_StreamBufferSink
            </summary>
        </member>
        <member name="T:DirectShowLib.SampleGrabber">
            <summary>
            CLSID_SampleGrabber
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferSource">
            <summary>
            CLSID_StreamBufferSource
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoMixingRenderer">
            <summary>
            CLSID_VideoMixingRenderer
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoMixingRenderer9">
            <summary>
            CLSID_VideoMixingRenderer9
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoRendererDefault">
            <summary>
            CLSID_VideoRendererDefault
            </summary>
        </member>
        <member name="T:DirectShowLib.AviSplitter">
            <summary>
            CLSID_AviSplitter
            </summary>
        </member>
        <member name="T:DirectShowLib.SmartTee">
            <summary>
            CLSID_SmartTee
            </summary>
        </member>
        <member name="T:DirectShowLib.NullRenderer">
            <summary>
            CLSID_NullRenderer
            </summary>
        </member>
        <member name="T:DirectShowLib.ACMWrapper">
            <summary>
            CLSID_ACMWrapper
            </summary>
        </member>
        <member name="T:DirectShowLib.AudioRender">
            <summary>
            CLSID_AudioRender
            </summary>
        </member>
        <member name="T:DirectShowLib.AVIDec">
            <summary>
            CLSID_AVIDec
            </summary>
        </member>
        <member name="T:DirectShowLib.AVIDraw">
            <summary>
            CLSID_AVIDraw
            </summary>
        </member>
        <member name="T:DirectShowLib.AviDest">
            <summary>
            CLSID_AviDest
            </summary>
        </member>
        <member name="T:DirectShowLib.ATSCNetworkProvider">
            <summary>
            CLSID_ATSCNetworkProvider
            </summary>
        </member>
        <member name="T:DirectShowLib.DVBCNetworkProvider">
            <summary>
            CLSID_DVBCNetworkProvider
            </summary>
        </member>
        <member name="T:DirectShowLib.DVBSNetworkProvider">
            <summary>
            CLSID_DVBSNetworkProvider
            </summary>
        </member>
        <member name="T:DirectShowLib.DVBTNetworkProvider">
            <summary>
            CLSID_DVBTNetworkProvider
            </summary>
        </member>
        <member name="T:DirectShowLib.NetworkProvider">
            <summary>
            CLSID_NetworkProvider
            </summary>
        </member>
        <member name="T:DirectShowLib.Colour">
            <summary>
            CLSID_Colour
            </summary>
        </member>
        <member name="T:DirectShowLib.DSoundRender">
            <summary>
            CLSID_DSoundRender
            </summary>
        </member>
        <member name="T:DirectShowLib.DVMux">
            <summary>
            CLSID_DVMux
            </summary>
        </member>
        <member name="T:DirectShowLib.DVSplitter">
            <summary>
            CLSID_DVSplitter
            </summary>
        </member>
        <member name="T:DirectShowLib.DVVideoCodec">
            <summary>
            CLSID_DVVideoCodec
            </summary>
        </member>
        <member name="T:DirectShowLib.DVVideoEnc">
            <summary>
            CLSID_DVVideoEnc
            </summary>
        </member>
        <member name="T:DirectShowLib.DVDNavigator">
            <summary>
            CLSID_DVDNavigator
            </summary>
        </member>
        <member name="T:DirectShowLib.AsyncReader">
            <summary>
            CLSID_AsyncReader
            </summary>
        </member>
        <member name="T:DirectShowLib.URLReader">
            <summary>
            CLSID_URLReader
            </summary>
        </member>
        <member name="T:DirectShowLib.FileWriter">
            <summary>
            CLSID_FileWriter
            </summary>
        </member>
        <member name="T:DirectShowLib.ModexRenderer">
            <summary>
            CLSID_ModexRenderer
            </summary>
        </member>
        <member name="T:DirectShowLib.InfTee">
            <summary>
            CLSID_InfTee
            </summary>
        </member>
        <member name="T:DirectShowLib.Line21Decoder">
            <summary>
            CLSID_Line21Decoder
            </summary>
        </member>
        <member name="T:DirectShowLib.Line21Decoder2">
            <summary>
            CLSID_Line21Decoder2
            </summary>
        </member>
        <member name="T:DirectShowLib.AVIMIDIRender">
            <summary>
            CLSID_AVIMIDIRender
            </summary>
        </member>
        <member name="T:DirectShowLib.MJPGEnc">
            <summary>
            CLSID_MJPGEnc
            </summary>
        </member>
        <member name="T:DirectShowLib.MjpegDec">
            <summary>
            CLSID_MjpegDec
            </summary>
        </member>
        <member name="T:DirectShowLib.CMpegAudioCodec">
            <summary>
            CLSID_CMpegAudioCodec
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG1Splitter">
            <summary>
            CLSID_MPEG1Splitter
            </summary>
        </member>
        <member name="T:DirectShowLib.CMpegVideoCodec">
            <summary>
            CLSID_CMpegVideoCodec
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG2Demultiplexer">
            <summary>
            CLSID_MPEG2Demultiplexer
            </summary>
        </member>
        <member name="T:DirectShowLib.MMSPLITTER">
            <summary>
            CLSID_MMSPLITTER
            </summary>
        </member>
        <member name="T:DirectShowLib.OverlayMixer">
            <summary>
            CLSID_OverlayMixer
            </summary>
        </member>
        <member name="T:DirectShowLib.OverlayMixer2">
            <summary>
            CLSID_OverlayMixer2
            </summary>
        </member>
        <member name="T:DirectShowLib.QTDec">
            <summary>
            CLSID_QTDec
            </summary>
        </member>
        <member name="T:DirectShowLib.QuickTimeParser">
            <summary>
            CLSID_QuickTimeParser
            </summary>
        </member>
        <member name="T:DirectShowLib.VBISurfaces">
            <summary>
            CLSID_VBISurfaces
            </summary>
        </member>
        <member name="T:DirectShowLib.VfwCapture">
            <summary>
            CLSID_VfwCapture
            </summary>
        </member>
        <member name="T:DirectShowLib.Dither">
            <summary>
            CLSID_Dither
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoPortManager">
            <summary>
            CLSID_VideoPortManager
            </summary>
        </member>
        <member name="T:DirectShowLib.VideoRenderer">
            <summary>
            CLSID_VideoRenderer
            </summary>
        </member>
        <member name="T:DirectShowLib.WMAsfReader">
            <summary>
            CLSID_WMAsfReader
            </summary>
        </member>
        <member name="T:DirectShowLib.SystemClock">
            <summary>
            CLSID_SystemClock
            </summary>
        </member>
        <member name="T:DirectShowLib.WMAsfWriter">
            <summary>
            CLSID_WMAsfWriter
            </summary>
        </member>
        <member name="T:DirectShowLib.WSTDecoder">
            <summary>
            CLSID_WSTDecoder
            </summary>
        </member>
        <member name="T:DirectShowLib.Mpeg2VideoStreamAnalyzer">
            <summary>
            CLSID_Mpeg2VideoStreamAnalyzer
            </summary>
        </member>
        <member name="T:DirectShowLib.PTFilter">
            <summary>
            CLSID_PTFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.MPEG2Demultiplexer_NoClock">
            <summary>
            CLSID_MPEG2Demultiplexer_NoClock
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE2Sink">
            <summary>
            CLSID_SBE2Sink
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferPropertyHandler">
            <summary>
            CLSID_StreamBufferPropertyHandler
            </summary>
        </member>
        <member name="T:DirectShowLib.StreamBufferThumbnailHandler">
            <summary>
            CLSID_StreamBufferThumbnailHandler
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE2File">
            <summary>
            CLSID_SBE2File
            </summary>
        </member>
        <member name="T:DirectShowLib.CCAFilter">
            <summary>
            CLSID_CCAFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.CaptionsFilter">
            <summary>
            CLSID_CaptionsFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.SubtitlesFilter">
            <summary>
            CLSID_SubtitlesFilter
            </summary>
        </member>
        <member name="T:DirectShowLib.DirectShowPluginControl">
            <summary>
            CLSID_DirectShowPluginControl
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE2MediaTypeProfile">
            <summary>
            CLSID_SBE2MediaTypeProfile
            </summary>
        </member>
        <member name="T:DirectShowLib.SBE2FileScan">
            <summary>
            CLSID_SBE2FileScan
            </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.CPCAFiltersCategory">
            <summary> CLSID_CPCAFiltersCategory </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.MediaEncoderCategory">
            <summary> CLSID_MediaEncoderCategory </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.MediaMultiplexerCategory">
            <summary> CLSID_MediaMultiplexerCategory </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.DMOFilterCategory">
            <summary> CLSID_DMOFilterCategory </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AudioInputDevice">
            <summary> CLSID_AudioInputDeviceCategory, audio capture category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.VideoInputDevice">
            <summary> CLSID_VideoInputDeviceCategory, video capture category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.VideoCompressorCategory">
            <summary> CLSID_VideoCompressorCategory, video compressor category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AudioCompressorCategory">
            <summary> CLSID_AudioCompressorCategory, audio compressor category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.LegacyAmFilterCategory">
            <summary> CLSID_LegacyAmFilterCategory, legacy filters </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AudioRendererCategory">
            <summary> CLSID_AudioRendererCategory, Audio renderer category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.BDAReceiverComponentsCategory">
            <summary> KSCATEGORY_BDA_RECEIVER_COMPONENT, BDA Receiver Components category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.BDASourceFiltersCategory">
            <summary> KSCATEGORY_BDA_NETWORK_TUNER, BDA Source Filters category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.BDARenderingFiltersCategory">
            <summary> KSCATEGORY_BDA_IP_SINK, BDA Rendering Filters category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.BDANetworkProvidersCategory">
            <summary> KSCATEGORY_BDA_NETWORK_PROVIDER, BDA Network Providers category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.BDATransportInformationRenderersCategory">
            <summary> KSCATEGORY_BDA_TRANSPORT_INFORMATION, BDA Transport Information Renderers category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.MidiRendererCategory">
            <summary> CLSID_MidiRendererCategory </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.TransmitCategory">
            <summary> CLSID_TransmitCategory  External Renderers Category</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.DeviceControlCategory">
            <summary> CLSID_DeviceControlCategory  Device Control Filters</summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.VideoEffects1Category">
            <summary> CLSID_VideoEffects1Category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.VideoEffects2Category">
            <summary> CLSID_VideoEffects2Category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AudioEffects1Category">
            <summary> CLSID_AudioEffects1Category </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AudioEffects2Category">
            <summary> CLSID_AudioEffects2Category </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DirectShowLib.FilterCategory.KSDataDecompressor" -->
        <member name="F:DirectShowLib.FilterCategory.KSCommunicationsTransform">
            <summary> KSCATEGORY_COMMUNICATIONSTRANSFORM </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.KSDataTransform">
            <summary> KSCATEGORY_DATATRANSFORM </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.KSInterfaceTransform">
            <summary> KSCATEGORY_INTERFACETRANSFORM </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.KSMixer">
            <summary> KSCATEGORY_MIXER </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.KSAudioDevice">
            <summary> KSCATEGORY_AUDIO_DEVICE </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.ActiveMovieCategories">
            <summary> CLSID_ActiveMovieCategories </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSCapture">
            <summary> AM_KSCATEGORY_CAPTURE </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSRender">
            <summary> AM_KSCATEGORY_RENDER </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSDataCompressor">
            <summary> AM_KSCATEGORY_DATACOMPRESSOR </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSAudio">
            <summary> AM_KSCATEGORY_AUDIO </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSVideo">
            <summary> AM_KSCATEGORY_VIDEO </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSTVTuner">
            <summary> AM_KSCATEGORY_TVTUNER </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSCrossbar">
            <summary> AM_KSCATEGORY_CROSSBAR </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSTVAudio">
            <summary> AM_KSCATEGORY_TVAUDIO </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSVBICodec">
            <summary> AM_KSCATEGORY_VBICODEC </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.AMKSSplitter">
            <summary> AM_KSCATEGORY_SPLITTER </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.WDMStreamingEncoderDevices">
            <summary> Not defined </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.WDMStreamingMultiplexerDevices">
            <summary> Not defined </summary>
        </member>
        <member name="F:DirectShowLib.FilterCategory.LTMMVideoProcessors">
            <summary> Not defined </summary>
        </member>
        <member name="F:DirectShowLib.VMRClsId.AllocPresenter">
            <summary>CLSID_AllocPresenter</summary>
        </member>
        <member name="F:DirectShowLib.VMRClsId.AllocPresenterDDXclMode">
            <summary>CLSID_AllocPresenterDDXclMode</summary>
        </member>
        <member name="F:DirectShowLib.TVEClsId.DShowTVEFilter">
            <summary>CLSID_DShowTVEFilter</summary>
        </member>
        <member name="F:DirectShowLib.TVEClsId.TVEFilterTuneProperties">
            <summary>CLSID_TVEFilterTuneProperties</summary>
        </member>
        <member name="F:DirectShowLib.TVEClsId.TVEFilterCCProperties">
            <summary>CLSID_TVEFilterCCProperties</summary>
        </member>
        <member name="F:DirectShowLib.TVEClsId.TVEFilterStatsProperties">
            <summary>CLSID_TVEFilterStatsProperties</summary>
        </member>
        <member name="F:DirectShowLib.ENCAPIClsId.IVideoEncoderProxy">
            <summary>CLSID_IVideoEncoderProxy</summary>
        </member>
        <member name="F:DirectShowLib.ENCAPIClsId.ICodecAPIProxy">
            <summary>CLSID_ICodecAPIProxy</summary>
        </member>
        <member name="F:DirectShowLib.ENCAPIClsId.IVideoEncoderCodecAPIProxy">
            <summary>CLSID_IVideoEncoderCodecAPIProxy</summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Video">
            <summary> MEDIATYPE_Video 'vids' </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Interleaved">
            <summary> MEDIATYPE_Interleaved 'iavs' </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Audio">
            <summary> MEDIATYPE_Audio 'auds' </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Texts">
            <summary> MEDIATYPE_Text 'txts' </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Stream">
            <summary> MEDIATYPE_Stream </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.VBI">
            <summary> MEDIATYPE_VBI </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Midi">
            <summary> MEDIATYPE_Midi </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.File">
            <summary> MEDIATYPE_File </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.ScriptCommand">
            <summary> MEDIATYPE_ScriptCommand </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.AuxLine21Data">
            <summary> MEDIATYPE_AUXLine21Data </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Timecode">
            <summary> MEDIATYPE_Timecode </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.LMRT">
            <summary> MEDIATYPE_LMRT </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.URLStream">
            <summary> MEDIATYPE_URL_STREAM </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.AnalogVideo">
            <summary> MEDIATYPE_AnalogVideo </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.AnalogAudio">
            <summary> MEDIATYPE_AnalogAudio </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.Mpeg2Sections">
            <summary> MEDIATYPE_MPEG2_SECTIONS </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.DTVCCData">
            <summary> MEDIATYPE_DTVCCData </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.MSTVCaption">
            <summary> MEDIATYPE_MSTVCaption </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.AUXTeletextPage">
            <summary> MEDIATYPE_AUXTeletextPage </summary>
        </member>
        <member name="F:DirectShowLib.MediaType.CC_Container">
            <summary> MEDIATYPE_CC_CONTAINER </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CLPL">
            <summary> MEDIASUBTYPE_CLPL </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.YUYV">
            <summary> MEDIASUBTYPE_YUYV </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IYUV">
            <summary> MEDIASUBTYPE_IYUV </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.YVU9">
            <summary> MEDIASUBTYPE_YVU9 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Y411">
            <summary> MEDIASUBTYPE_Y411 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Y41P">
            <summary> MEDIASUBTYPE_Y41P </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.YUY2">
            <summary> MEDIASUBTYPE_YUY2 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.YVYU">
            <summary> MEDIASUBTYPE_YVYU </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.UYVY">
            <summary> MEDIASUBTYPE_UYVY </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Y211">
            <summary> MEDIASUBTYPE_Y211 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CLJR">
            <summary> MEDIASUBTYPE_CLJR </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IF09">
            <summary> MEDIASUBTYPE_IF09 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CPLA">
            <summary> MEDIASUBTYPE_CPLA </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MJPG">
            <summary> MEDIASUBTYPE_MJPG </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.TVMJ">
            <summary> MEDIASUBTYPE_TVMJ </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.WAKE">
            <summary> MEDIASUBTYPE_WAKE </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CFCC">
            <summary> MEDIASUBTYPE_CFCC </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IJPG">
            <summary> MEDIASUBTYPE_IJPG </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.PLUM">
            <summary> MEDIASUBTYPE_Plum </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DVCS">
            <summary> MEDIASUBTYPE_DVCS </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DVSD">
            <summary> MEDIASUBTYPE_DVSD </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MDVF">
            <summary> MEDIASUBTYPE_MDVF </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB1">
            <summary> MEDIASUBTYPE_RGB1 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB4">
            <summary> MEDIASUBTYPE_RGB4 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB8">
            <summary> MEDIASUBTYPE_RGB8 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB565">
            <summary> MEDIASUBTYPE_RGB565 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB555">
            <summary> MEDIASUBTYPE_RGB555 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB24">
            <summary> MEDIASUBTYPE_RGB24 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB32">
            <summary> MEDIASUBTYPE_RGB32 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB1555">
            <summary> MEDIASUBTYPE_ARGB1555 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB4444">
            <summary> MEDIASUBTYPE_ARGB4444 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB32">
            <summary> MEDIASUBTYPE_ARGB32 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.A2R10G10B10">
            <summary> MEDIASUBTYPE_A2R10G10B10 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.A2B10G10R10">
            <summary> MEDIASUBTYPE_A2B10G10R10 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AYUV">
            <summary> MEDIASUBTYPE_AYUV </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AI44">
            <summary> MEDIASUBTYPE_AI44 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IA44">
            <summary> MEDIASUBTYPE_IA44 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB16_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX7_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB32_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX7_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB4444_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX7_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB1555_D3D_DX7_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX7_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RGB16_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_RGB16_D3D_DX9_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB32_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB32_D3D_DX9_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB4444_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB4444_D3D_DX9_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ARGB1555_D3D_DX9_RT">
            <summary> MEDIASUBTYPE_ARGB1555_D3D_DX9_RT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.YV12">
            <summary> MEDIASUBTYPE_YV12 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.NV12">
            <summary> MEDIASUBTYPE_NV12 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IMC1">
            <summary> MEDIASUBTYPE_IMC1 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IMC2">
            <summary> MEDIASUBTYPE_IMC2 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IMC3">
            <summary> MEDIASUBTYPE_IMC3 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IMC4">
            <summary> MEDIASUBTYPE_IMC4 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.S340">
            <summary> MEDIASUBTYPE_S340 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.S342">
            <summary> MEDIASUBTYPE_S342 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Overlay">
            <summary> MEDIASUBTYPE_Overlay </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1Packet">
            <summary> MEDIASUBTYPE_MPEG1Packet </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1Payload">
            <summary> MEDIASUBTYPE_MPEG1Payload </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1AudioPayload">
            <summary> MEDIASUBTYPE_MPEG1AudioPayload </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1SystemStream">
            <summary> MEDIATYPE_MPEG1SystemStream </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1System">
            <summary> MEDIASUBTYPE_MPEG1System </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1VideoCD">
            <summary> MEDIASUBTYPE_MPEG1VideoCD </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1Video">
            <summary> MEDIASUBTYPE_MPEG1Video </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.MPEG1Audio">
            <summary> MEDIASUBTYPE_MPEG1Audio </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Avi">
            <summary> MEDIASUBTYPE_Avi </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Asf">
            <summary> MEDIASUBTYPE_Asf </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.QTMovie">
            <summary> MEDIASUBTYPE_QTMovie </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.QTRpza">
            <summary> MEDIASUBTYPE_QTRpza </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.QTSmc">
            <summary> MEDIASUBTYPE_QTSmc </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.QTRle">
            <summary> MEDIASUBTYPE_QTRle </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.QTJpeg">
            <summary> MEDIASUBTYPE_QTJpeg </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.PCMAudio_Obsolete">
            <summary> MEDIASUBTYPE_PCMAudio_Obsolete </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.PCM">
            <summary> MEDIASUBTYPE_PCM </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.WAVE">
            <summary> MEDIASUBTYPE_WAVE </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AU">
            <summary> MEDIASUBTYPE_AU </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AIFF">
            <summary> MEDIASUBTYPE_AIFF </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.dvhd">
            <summary> MEDIASUBTYPE_dvhd </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.dvsl">
            <summary> MEDIASUBTYPE_dvsl </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.dv25">
            <summary> MEDIASUBTYPE_dv25 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.dv50">
            <summary> MEDIASUBTYPE_dv50 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.dvh1">
            <summary> MEDIASUBTYPE_dvh1 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Line21_BytePair">
            <summary> MEDIASUBTYPE_Line21_BytePair </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Line21_GOPPacket">
            <summary> MEDIASUBTYPE_Line21_GOPPacket </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Line21_VBIRawData">
            <summary> MEDIASUBTYPE_Line21_VBIRawData </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.TELETEXT">
            <summary> MEDIASUBTYPE_TELETEXT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.WSS">
            <summary> MEDIASUBTYPE_WSS </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.VPS">
            <summary> MEDIASUBTYPE_VPS </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DRM_Audio">
            <summary> MEDIASUBTYPE_DRM_Audio </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.IEEE_FLOAT">
            <summary> MEDIASUBTYPE_IEEE_FLOAT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DOLBY_AC3_SPDIF">
            <summary> MEDIASUBTYPE_DOLBY_AC3_SPDIF </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.RAW_SPORT">
            <summary> MEDIASUBTYPE_RAW_SPORT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.SPDIF_TAG_241h">
            <summary> MEDIASUBTYPE_SPDIF_TAG_241h </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DssVideo">
            <summary> MEDIASUBTYPE_DssVideo </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DssAudio">
            <summary> MEDIASUBTYPE_DssAudio </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.VPVideo">
            <summary> MEDIASUBTYPE_VPVideo </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.VPVBI">
            <summary> MEDIASUBTYPE_VPVBI </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_NTSC_M">
            <summary> MEDIASUBTYPE_AnalogVideo_NTSC_M </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_B">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_B </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_D">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_D </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_G">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_G </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_H">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_H </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_I">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_I </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_M">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_M </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_N">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_PAL_N_COMBO">
            <summary> MEDIASUBTYPE_AnalogVideo_PAL_N_COMBO </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_B">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_B </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_D">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_D </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_G">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_G </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_H">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_H </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_K">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_K1">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_K1 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AnalogVideo_SECAM_L">
            <summary> MEDIASUBTYPE_AnalogVideo_SECAM_L </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.I420">
            <summary> not in uuids.h </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.VideoImage">
            <summary> WMMEDIASUBTYPE_VIDEOIMAGE </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2Video">
            <summary> WMMEDIASUBTYPE_MPEG2_VIDEO </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.WebStream">
            <summary> WMMEDIASUBTYPE_WebStream </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2Audio">
            <summary> MEDIASUBTYPE_MPEG2_AUDIO </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DolbyAC3">
            <summary> MEDIASUBTYPE_DOLBY_AC3 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DvbSI">
            <summary> MEDIASUBTYPE_DVB_SI </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.AtscSI">
            <summary> MEDIASUBTYPE_ATSC_SI </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2Data">
            <summary> MEDIASUBTYPE_MPEG2DATA </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2Program">
            <summary> MEDIASUBTYPE_MPEG2_PROGRAM </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2Transport">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Mpeg2TransportStride">
            <summary> MEDIASUBTYPE_MPEG2_TRANSPORT_STRIDE </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.None">
            <summary> MEDIASUBTYPE_None </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.H264">
            <summary> MEDIASUBTYPE_H264 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.NV24">
            <summary> MEDIASUBTYPE_NV24 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Data708_608">
            <summary> MEDIASUBTYPE_708_608Data </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DtvCcData">
            <summary> MEDIASUBTYPE_DtvCcData </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.DVB_Subtitles">
            <summary> MEDIASUBTYPE_DVB_SUBTITLES </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ISDB_Captions">
            <summary> MEDIASUBTYPE_ISDB_CAPTIONS </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ISDB_Superimpose">
            <summary> MEDIASUBTYPE_ISDB_SUPERIMPOSE </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.NV11">
            <summary> MEDIASUBTYPE_NV11 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P208">
            <summary> MEDIASUBTYPE_P208 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P210">
            <summary> MEDIASUBTYPE_P210 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P216">
            <summary> MEDIASUBTYPE_P216 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P010">
            <summary> MEDIASUBTYPE_P010 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P016">
            <summary> MEDIASUBTYPE_P016 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Y210">
            <summary> MEDIASUBTYPE_Y210 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.Y216">
            <summary> MEDIASUBTYPE_Y216 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.P408">
            <summary> MEDIASUBTYPE_P408 </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CC_Container">
            <summary> MEDIASUBTYPE_CC_CONTAINER </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.VBI">
            <summary> MEDIASUBTYPE_VBI </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.XDS">
            <summary> MEDIASUBTYPE_XDS </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.ETDTFilter_Tagged">
            <summary> MEDIASUBTYPE_ETDTFilter_Tagged </summary>
        </member>
        <member name="F:DirectShowLib.MediaSubType.CPFilters_Processed">
            <summary> MEDIASUBTYPE_CPFilters_Processed </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.None">
            <summary> FORMAT_None </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.VideoInfo">
            <summary> FORMAT_VideoInfo </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.VideoInfo2">
            <summary> FORMAT_VideoInfo2 </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.WaveEx">
            <summary> FORMAT_WaveFormatEx </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.MpegVideo">
            <summary> FORMAT_MPEGVideo </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.MpegStreams">
            <summary> FORMAT_MPEGStreams </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.DvInfo">
            <summary> FORMAT_DvInfo </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.AnalogVideo">
            <summary> FORMAT_AnalogVideo </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.Mpeg2Video">
            <summary> FORMAT_MPEG2Video </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.DolbyAC3">
            <summary> FORMAT_DolbyAC3 </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.Mpeg2Audio">
            <summary> FORMAT_MPEG2Audio </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.WSS525">
            <summary> FORMAT_525WSS </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.ETDTFilter_Tagged">
            <summary> FORMATTYPE_ETDTFilter_Tagged </summary>
        </member>
        <member name="F:DirectShowLib.FormatType.CPFilters_Processed">
            <summary> FORMATTYPE_CPFilters_Processed </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.UDCRTag">
            <summary> DSATTRIB_UDCRTag </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.PicSampleSeq">
            <summary> DSATTRIB_PicSampleSeq </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.OptionalVideoAttributes">
            <summary> DSATTRIB_OptionalVideoAttributes </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.CC_ContainerInfo">
            <summary> DSATTRIB_CC_CONTAINER_INFO </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.TransportProperties">
            <summary> DSATTRIB_TRANSPORT_PROPERTIES </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.PBDATagAttribute">
            <summary> DSATTRIB_PBDATAG_ATTRIBUTE </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.CaptureStreamtime">
            <summary> DSATTRIB_CAPTURE_STREAMTIME </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.DShowStreamDesc">
            <summary> DSATTRIB_DSHOW_STREAM_DESC </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.SampleLiveStreamtime">
            <summary> DSATTRIB_SAMPLE_LIVE_STREAM_TIME </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.WMDRMProtectionInfo">
            <summary> DSATTRIB_WMDRMProtectionInfo </summary>
        </member>
        <member name="F:DirectShowLib.DSAttrib.BadSampleInfo">
            <summary> DSATTRIB_BadSampleInfo </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.Pin">
            <summary> AMPROPSETID_Pin</summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.DroppedFrames">
            <summary> PROPSETID_VIDCAP_DROPPEDFRAMES </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.ENCAPIPARAM_BitRate">
            <summary> STATIC_ENCAPIPARAM_BITRATE </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.ENCAPIPARAM_PeakBitRate">
            <summary> STATIC_ENCAPIPARAM_PEAK_BITRATE </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.ENCAPIPARAM_BitRateMode">
            <summary> STATIC_ENCAPIPARAM_BITRATE_MODE </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.ENCAPIPARAM_SAP_MODE">
            <summary> ENCAPIPARAM_SAP_MODE </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_AVDecMmcssClass">
            <summary> CODECAPI_AVDecMmcssClass </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_ChangeLists">
            <summary> STATIC_CODECAPI_CHANGELISTS </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_VideoEncoder">
            <summary> STATIC_CODECAPI_VIDEO_ENCODER </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_AudioEncoder">
            <summary> STATIC_CODECAPI_AUDIO_ENCODER </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_SetAllDefaults">
            <summary> STATIC_CODECAPI_SETALLDEFAULTS </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_AllSettings">
            <summary> STATIC_CODECAPI_ALLSETTINGS </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_SupportsEvents">
            <summary> STATIC_CODECAPI_SUPPORTSEVENTS </summary>
        </member>
        <member name="F:DirectShowLib.PropSetID.CODECAPI_CurrentChangeList">
            <summary> STATIC_CODECAPI_CURRENTCHANGELIST </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.Capture">
            <summary> PIN_CATEGORY_CAPTURE </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.Preview">
            <summary> PIN_CATEGORY_PREVIEW </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.AnalogVideoIn">
            <summary> PIN_CATEGORY_ANALOGVIDEOIN </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.VBI">
            <summary> PIN_CATEGORY_VBI </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.VideoPort">
            <summary> PIN_CATEGORY_VIDEOPORT </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.NABTS">
            <summary> PIN_CATEGORY_NABTS </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.EDS">
            <summary> PIN_CATEGORY_EDS </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.TeleText">
            <summary> PIN_CATEGORY_TELETEXT </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.CC">
            <summary> PIN_CATEGORY_CC </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.Still">
            <summary> PIN_CATEGORY_STILL </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.TimeCode">
            <summary> PIN_CATEGORY_TIMECODE </summary>
        </member>
        <member name="F:DirectShowLib.PinCategory.VideoPortVBI">
            <summary> PIN_CATEGORY_VIDEOPORT_VBI </summary>
        </member>
        <member name="F:DirectShowLib.FindDirection.UpstreamOnly">
            <summary> LOOK_UPSTREAM_ONLY </summary>
        </member>
        <member name="F:DirectShowLib.FindDirection.DownstreamOnly">
            <summary> LOOK_DOWNSTREAM_ONLY </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.CrossbarFilterPropertyPage">
            <summary> CLSID_CrossbarFilterPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AudioInputMixer">
            <summary> CLSID_AudioInputMixerProperties </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AudioProperties">
            <summary> CLSID_AudioProperties </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AudioRendererAdvancedProperties">
            <summary> CLSID_AudioRendererAdvancedProperties </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AviMux">
            <summary> CLSID_AviMuxProptyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AviMux1">
            <summary> CLSID_AviMuxProptyPage1 </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.DVDec">
            <summary> CLSID_DVDecPropertiesPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.DVEnc">
            <summary> CLSID_DVEncPropertiesPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.Modex">
            <summary> CLSID_ModexProperties </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.Capture">
            <summary> CLSID_CaptureProperties </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.WstDecoder">
            <summary> CLSID_WstDecoderPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.DVMux">
            <summary> CLSID_DVMuxPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.VideoProcAmpPropertyPage">
            <summary> CLSID_VideoProcAmpPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.CameraControlPropertyPage">
            <summary> CLSID_CameraControlPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.AnalogVideoDecoderPropertyPage">
            <summary> CLSID_AnalogVideoDecoderPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.VideoStreamConfigPropertyPage">
            <summary> CLSID_VideoStreamConfigPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.ATSCNetworkPropertyPage">
            <summary> CLSID_ATSCNetworkPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.TVTunerFilterPropertyPage">
            <summary> CLSID_TVTunerFilterPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.PropertyPages.TVAudioFilterPropertyPage">
            <summary> CLSID_TVAudioFilterPropertyPage </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.RFTuner">
            <summary> KSNODE_BDA_RF_TUNER </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.QAMDemodulator">
            <summary> KSNODE_BDA_QAM_DEMODULATOR </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.QPSKDemodulator">
            <summary> KSNODE_BDA_QPSK_DEMODULATOR </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.EightVSBDemodulator">
            <summary> KSNODE_BDA_8VSB_DEMODULATOR </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.COFDMDemodulator">
            <summary> KSNODE_BDA_COFDM_DEMODULATOR </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.OpenCablePod">
            <summary> KSNODE_BDA_OPENCABLE_POD </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.CommonCAPod">
            <summary> KSNODE_BDA_COMMON_CA_POD </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.PidFilter">
            <summary> KSNODE_BDA_PID_FILTER </summary>
        </member>
        <member name="F:DirectShowLib.BDANodeCategory.IPSink">
            <summary> KSNODE_BDA_IP_SINK </summary>
        </member>
        <member name="F:DirectShowLib.TAGTables.UdriTagTables">
            <summary> UUID_UdriTagTables </summary>
        </member>
        <member name="F:DirectShowLib.TAGTables.WMDRMTagTables">
            <summary> UUID_WMDRMTagTables </summary>
        </member>
        <member name="T:DirectShowLib.KSTopologyConnection">
            <summary>
            From KSTOPOLOGY_CONNECTION
            </summary>
        </member>
        <member name="T:DirectShowLib.AMVP_Mode">
            <summary>
            From AMVP_MODE
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9PresentationFlags">
            <summary>
            From VMR9PresentationFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9SurfaceAllocationFlags">
            <summary>
            From VMR9SurfaceAllocationFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9ProcAmpControlFlags">
            <summary>
            From VMR9ProcAmpControlFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9MixerPrefs">
            <summary>
            From VMR9MixerPrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9DeinterlaceTech">
            <summary>
            From VMR9DeinterlaceTech
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9AlphaBitmapFlags">
            <summary>
            From VMR9AlphaBitmapFlags
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9DeinterlacePrefs">
            <summary>
            From VMR9DeinterlacePrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9RenderPrefs">
            <summary>
            From VMR9RenderPrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9Mode">
            <summary>
            From VMR9Mode
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9AspectRatioMode">
            <summary>
            From VMR9AspectRatioMode
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9SampleFormat">
            <summary>
            From VMR9_SampleFormat
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9PresentationInfo">
            <summary>
            From VMR9PresentationInfo
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9AllocationInfo">
            <summary>
            From VMR9AllocationInfo
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9ProcAmpControl">
            <summary>
            From VMR9ProcAmpControl
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9MonitorInfo">
            <summary>
            From VMR9MonitorInfo
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9DeinterlaceCaps">
            <summary>
            From VMR9DeinterlaceCaps
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9VideoStreamInfo">
            <summary>
            From VMR9VideoStreamInfo
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9VideoDesc">
            <summary>
            From VMR9VideoDesc
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9Frequency">
            <summary>
            From VMR9Frequency
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9AlphaBitmap">
            <summary>
            From VMR9AlphaBitmap
            </summary>
        </member>
        <member name="T:DirectShowLib.VMR9ProcAmpControlRange">
            <summary>
            From VMR9ProcAmpControlRange
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRDeinterlaceTech">
            <summary>
            From VMRDeinterlaceTech
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRBitmap">
            <summary>
            From VMRBITMAP_* defines
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRDeinterlacePrefs">
            <summary>
            From VMRDeinterlacePrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRMixerPrefs">
            <summary>
            From VMRMixerPrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRRenderPrefs">
            <summary>
            From VMRRenderPrefs
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRMode">
            <summary>
            From VMRMode
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRAspectRatioMode">
            <summary>
            From VMR_ASPECT_RATIO_MODE
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRAlphaBitmap">
            <summary>
            From VMRALPHABITMAP
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRDeinterlaceCaps">
            <summary>
            From VMRDeinterlaceCaps
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRFrequency">
            <summary>
            From VMRFrequency
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRVideoDesc">
            <summary>
            From VMRVideoDesc
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRVideoStreamInfo">
            <summary>
            From VMRVIDEOSTREAMINFO
            </summary>
        </member>
        <member name="T:DirectShowLib.DDColorKey">
            <summary>
            From DDCOLORKEY
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRMonitorInfo">
            <summary>
            From VMRMONITORINFO
            </summary>
        </member>
        <member name="T:DirectShowLib.VMRGuid">
            <summary>
            From VMRGUID
            </summary>
        </member>
        <member name="M:DirectShowLib.IVMRWindowlessControl.GetCurrentImage(System.IntPtr@)">
            <summary>
            the caller is responsible for free the returned memory by calling CoTaskMemFree.
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.D3DRenderer">
            <summary>
            The D3DRenderer class provides basic functionality needed
            to render a D3D surface.  This class is abstract.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_d3dImage">
            <summary>
            The D3DImage used to render video
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_videoImage">
            <summary>
            The Image control that has the source
            to the D3DImage
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_pBackBuffer">
            <summary>
            We keep reference to the D3D surface so
            we can delay loading it to avoid a black flicker
            when loading new media
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_newSurfaceAvailable">
            <summary>
            Flag to tell us if we have a new D3D
            Surface available
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_clonedD3Drenderers">
            <summary>
            A weak reference of D3DRenderers that have been cloned
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_renderOnCompositionTargetRendering">
            <summary>
            Backing field for the RenderOnCompositionTargetRendering flag. 
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.D3DRenderer.m_renderOnCompositionTargetRenderingTemp">
            <summary>
            Temporary storage for the RenderOnCompositionTargetRendering flag.
            This is used to remember the value for when the control is loaded and unloaded.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.Stretch">
            <summary>
            Defines what rules are applied to the stretching of the video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.StretchDirection">
            <summary>
            Gets or Sets the value that indicates how the video is scaled.  This is a dependency property.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.IsRenderingEnabled">
            <summary>
            Enables or disables rendering of the video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.NaturalVideoHeight">
            <summary>
            Gets the natural pixel height of the current media.  
            The value will be 0 if there is no video in the media.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetNaturalVideoHeight(System.Int32)">
            <summary>
            Internal method to set the read-only NaturalVideoHeight DP
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.NaturalVideoWidth">
            <summary>
            Gets the natural pixel width of the current media.
            The value will be 0 if there is no video in the media.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetNaturalVideoWidth(System.Int32)">
            <summary>
            Internal method to set the read-only NaturalVideoWidth DP
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.HasVideo">
            <summary>
            Is true if the media contains renderable video
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetHasVideo(System.Boolean)">
            <summary>
            Internal method for setting the read-only HasVideo DP
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.D3DRendererUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for when the D3DRenderer is unloaded
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.D3DRendererLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for when the D3DRenderer is loaded
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.InitializeD3DVideo">
            <summary>
            Initializes the D3DRenderer control
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.D3DImageIsFrontBufferAvailableChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This should only fire when a D3D device is lost
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.CleanZombieRenderers">
            <summary>
            Cleans up any dead references we may have to any cloned renderers
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetBackBufferForClones">
            <summary>
            Sets the backbuffer for any cloned D3DRenderers
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetBackBufferInternal(System.IntPtr)">
            <summary>
            Configures D3DImage with a new surface.  This happens immediately
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.InvalidateClonedVideoImages">
            <summary>
            Invalidates any possible cloned renderer we may have
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.D3DRenderer.ClonedD3DRenderer">
            <summary>
            Used as a clone for a D3DRenderer
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.D3DRenderer.RenderOnCompositionTargetRendering">
            <summary>
            Renders the video with WPF's rendering using the CompositionTarget.Rendering event
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.SetBackBuffer(System.IntPtr)">
            <summary>
            Configures D3DImage with a new surface.  The back buffer is
            not set until we actually receive a frame, this way we
            can avoid a black flicker between media changes
            </summary>
            <param name="backBuffer">The unmanaged pointer to the Direct3D Surface</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.InternalInvalidateVideoImage">
            <summary>
            Invalidates the entire Direct3D image, notifying WPF to redraw
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.D3DRenderer.CloneD3DRenderer">
            <summary>
            Creates a clone of the D3DRenderer.  This is a work for the visual
            brush not working cross-threaded
            </summary>
            <returns></returns>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdError">
            <summary>
            Fires when a DVD specific error occurs
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.IsOverDvdButton">
            <summary>
            Gets if the mouse is over a DVD button.  This is a dependency property.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayOnInsert">
            <summary>
            Gets or sets if the DVD automatically plays when a DVD is inserted into the computer.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdEjected">
            <summary>
            This event is fired when a DVD is ejected from the computer.  This is a bubbled, routed event.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdInserted">
            <summary>
            Fires when a DVD is inserted into the computer.
            This is a bubbled, routed event.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.CurrentDvdTime">
            <summary>
            Gets the current time the DVD playback is at.  This is a read-only,
            dependency property.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdDirectory">
            <summary>
            Gets or sets the directory the DVD is located at (ie D:\VIDEO_TS).  If this is empty or null,
            then DirectShow will try to play the first DVD found in the computer.
            This is a dependency property.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.SelectAngle(System.Int32)">
            <summary>
            The SelectAngle method sets the new angle when the DVD Navigator is in an angle block
            </summary>
            <param name="angle">Value of the new angle, which must be from 1 through 9</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.ReturnFromSubmenu">
            <summary>
            Returns the display from a submenu to its parent menu.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.SelectRelativeButton(WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum)">
            <summary>
            Selects the specified relative button (upper, lower, right, left)
            </summary>
            <param name="button">Value indicating the button to select</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.Resume">
            <summary>
            Leaves a menu and resumes playback.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayForwards(System.Double)">
            <summary>
            Plays the DVD forward at a specific speed
            </summary>
            <param name="speed">The speed multiplier to play back.</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayBackwards(System.Double)">
            <summary>
            Plays the DVD backwards at a specific speed
            </summary>
            <param name="speed">The speed multiplier to play back</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayTitle(System.Int32)">
            <summary>
            Play a title
            </summary>
            <param name="titleIndex">The index of the title to play back</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayNextChapter">
            <summary>
            Plays the next chapter in the volume.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.PlayPreviousChapter">
            <summary>
            Plays the previous chapter in the volume.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.GotoRootMenu">
            <summary>
            Goes to the root menu of the DVD.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.GotoTitleMenu">
            <summary>
            Goes to the title menu of the DVD
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.Play">
            <summary>
            The Play method is overrided so we can
            set the source to the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdPlayerOnDvdTime(System.Object,WPFMediaKit.DirectShow.MediaPlayers.DvdTimeEventArgs)">
            <summary>
            The handler for when a new DVD is hit.  The event is fired by the DVDPlayer class.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdPlayerOnOverDvdButton(System.Object,WPFMediaKit.DirectShow.MediaPlayers.OverDvdButtonEventArgs)">
            <summary>
            The handler for when the mouse is over a DVD button.  This event is fired by the DVD Player class.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdPlayerOnDvdInserted(System.Object,System.EventArgs)">
            <summary>
            Fires when a new DVD is inserted into a DVD player on the computer.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.DvdPlayerElement.DvdPlayerOnDvdEjected(System.Object,System.EventArgs)">
            <summary>
            Fires when the DVD is ejected from the computer.
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.MediaDetectorElement">
            <summary>
            This control is not finished.  Do not use it ;)
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.MediaElementBase">
            <summary>
            The MediaElementBase is the base WPF control for
            making custom media players.  The MediaElement uses the
            D3DRenderer class for rendering video
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaOpened">
            <summary>
            Fires when media has successfully been opened
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaClosed">
            <summary>
            Fires when media has been closed
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaEnded">
            <summary>
            Fires when media has completed playing
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaElementBase.UnloadedBehavior">
            <summary>
            Defines the behavior of the control when it is unloaded
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaElementBase.LoadedBehavior">
            <summary>
            Defines the behavior of the control when it is loaded
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaElementBase.Volume">
            <summary>
            Gets or sets the audio volume.  Specifies the volume, as a 
            number from 0 to 1.  Full volume is 1, and 0 is silence.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaElementBase.Balance">
            <summary>
            Gets or sets the balance on the audio.
            The value can range from -1 to 1. The value -1 means the right channel is attenuated by 100 dB 
            and is effectively silent. The value 1 means the left channel is silent. The neutral value is 0, 
            which means that both channels are at full volume. When one channel is attenuated, the other 
            remains at full volume.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaFailed">
            <summary>
            Notifies when the media has failed and produced an exception
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.InitializeMediaPlayer">
            <summary>
            Initializes the media player, hooking into events
            and other general setup.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.InvokeMediaFailed(WPFMediaKit.DirectShow.MediaPlayers.MediaFailedEventArgs)">
            <summary>
            Fires the MediaFailed event
            </summary>
            <param name="e">The failed media arguments</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerFailed(WPFMediaKit.DirectShow.MediaPlayers.MediaFailedEventArgs)">
            <summary>
            Executes when a media operation failed
            </summary>
            <param name="e">The failed event arguments</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerNewAllocatorSurface(System.IntPtr)">
            <summary>
            Is executes when a new D3D surfaces has been allocated
            </summary>
            <param name="pSurface">The pointer to the D3D surface</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerNewAllocatorFrame">
            <summary>
            Called for every frame in media that has video
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerClosed">
            <summary>
            Called when the media has been closed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerEnded">
            <summary>
            Called when the media has ended
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnMediaPlayerOpened">
            <summary>
            Executed when media has successfully been opened.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.WindowOwnerClosed(System.Object,System.EventArgs)">
            <summary>
            Fires when the owner window is closed.  Nothing will happen
            if the visual does not belong to the visual tree with a root
            of a WPF window
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaElementBaseUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Local handler for the Loaded event
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.MediaElementBaseLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Local handler for the Unloaded event
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnLoadedOverride">
            <summary>
            Runs when the Loaded event is fired and executes
            the LoadedBehavior
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnUnloadedOverride">
            <summary>
            Runs when the Unloaded event is fired and executes
            the UnloadedBehavior
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.ExecuteMediaState(WPFMediaKit.DirectShow.MediaPlayers.MediaState)">
            <summary>
            Executes the actions associated to a MediaState
            </summary>
            <param name="state">The MediaState to execute</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.Play">
            <summary>
            Plays the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.Pause">
            <summary>
            Pauses the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.Close">
            <summary>
            Closes the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.Stop">
            <summary>
            Stops the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaElementBase.OnRequestMediaPlayer">
            <summary>
            Called when a MediaPlayerBase is required.
            </summary>
            <returns>This method must return a valid (not null) MediaPlayerBase</returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.MediaSeekingElement">
            <summary>
            The MediaSeekingElement adds media seeking functionality to
            the MediaElementBase class.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.m_ignorePropertyChangedCallback">
            <summary>
            This flag is used to ignore PropertyChangedCallbacks
            for when a DependencyProperty is needs to be updated
            from the media player thread
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.MediaPosition">
            <summary>
            Gets or sets the media position in units of CurrentPositionFormat
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.SetMediaPositionInternal(System.Int64)">
            <summary>
            Used to set the MediaPosition without firing the
            PropertyChanged callback
            </summary>
            <param name="value">The value to set the MediaPosition to</param>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.MediaDuration">
            <summary>
            Gets the duration of the media in the units of CurrentPositionFormat
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.SetMediaDuration(System.Int64)">
            <summary>
            Internal method to set the read-only MediaDuration
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.CurrentPositionFormat">
            <summary>
            The current position format that the media is currently using
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.PreferedPositionFormat">
            <summary>
            The MediaPositionFormat that is prefered to be used
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.OnPreferedPositionFormatChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Executes when a the prefered position format has changed
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.SpeedRatio">
            <summary>
            Gets or sets the rate the media is played back
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.MediaSeekingPlayer">
            <summary>
            Internal reference to the MediaSeekingPlayer
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.OnMediaPlayerFailed(WPFMediaKit.DirectShow.MediaPlayers.MediaFailedEventArgs)">
            <summary>
            Fires when a media operation has failed
            </summary>
            <param name="e">The failed arguments</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.InitializeMediaPlayer">
            <summary>
            Occurs when the media player is being initialized.  Here
            the method is overridden as to attach to media seeking
            related functionality
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.OnMediaPlayerPositionChangedPrivate(System.Object,System.EventArgs)">
            <summary>
            A private handler for the MediaPositionChanged event of the media player
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.OnMediaPlayerPositionChanged">
            <summary>
            Runs when the media player's position has changed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaSeekingElement.OnMediaPlayerOpened">
            <summary>
            Runs when the MediaPlayer has successfully opened media
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.MediaUriElement">
            <summary>
            The MediaUriElement is a WPF control that plays media of a given
            Uri. The Uri can be a file path or a Url to media.  The MediaUriElement
            inherits from the MediaSeekingElement, so where available, seeking is
            also supported.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaUriElement.MediaUriPlayer">
            <summary>
            The current MediaUriPlayer
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaUriElement.AudioRenderer">
            <summary>
            The name of the audio renderer device to use
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaUriElement.Source">
            <summary>
            The Uri source to the media.  This can be a file path or a
            URL source
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MediaUriElement.Loop">
            <summary>
            Gets or sets whether the media should return to the begining
            once the end has reached
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaUriElement.Play">
            <summary>
            The Play method is overrided so we can
            set the source to the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaUriElement.Pause">
            <summary>
            The Pause method is overrided so we can
            set the source to the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaUriElement.OnRequestMediaPlayer">
            <summary>
            Gets the instance of the media player to initialize
            our base classes with
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.MultimediaUtil.m_audioRendererNames">
            <summary>
            The private cache of the audio renderer names
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MultimediaUtil.AudioRendererNames">
            <summary>
            An array of audio renderer device names
            on the current system
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.MultimediaUtil.m_videoInputNames">
            <summary>
            The private cache of the video input names
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.Controls.MultimediaUtil.VideoInputNames">
            <summary>
            An array of video input device names
            on the current system
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.MediaTimeToSeconds">
            <summary>
            Converter used to convert MediaTime format to seconds
            if the current MediaSeekingElement is using MediaTime
            format.  If the MediaSeekingElement is not using
            MediaTime, then the converter will return the input
            passed as the MediaTime.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.Controls.MediaTimeToSeconds.DSHOW_ONE_SECOND_UNIT">
            <summary>
            One second in 100ns units
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.MediaTimeToSeconds.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts MediaTime to seconds
            </summary>
            <param name="values">There are two parameters to pass.  The first is a MediaSeekingElement, 
            the second is a long of the MediaTime</param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>The time in seconds if MediaTime is being used, else the second input parameter is passed back</returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.Controls.VideoCaptureElement">
            <summary>
            The VideoCaptureElement is a WPF control that
            displays video from a capture device, such as 
            a web cam.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.VideoCaptureElement.OnUseYuvChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the UseYuv property.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.VideoCaptureElement.OnUseYuvChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Provides derived classes an opportunity to handle changes to the UseYuv property.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.Controls.VideoCaptureElement.SetParameters">
            <summary>
            Sets the parameters to the video capture player
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaPositionFormat">
            <summary>
            The types of position formats that
            are available for seeking media
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.NewAllocatorSurfaceDelegate">
            <summary>
            Delegate signature to notify of a new surface
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="pSurface">The pointer to the D3D surface</param>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaFailedEventArgs">
            <summary>
            The arguments that store information about a failed media attempt
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.ICustomAllocator">
            <summary>
            The custom allocator interface.  All custom allocators need
            to implement this interface.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.ICustomAllocator.NewAllocatorFrame">
            <summary>
            Invokes when a new frame has been allocated
            to a surface
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.ICustomAllocator.NewAllocatorSurface">
            <summary>
            Invokes when a new surface has been allocated
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.HiddenWindow">
            <summary>
            A low level window class that is used to provide interop with libraries
            that require an hWnd 
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.HiddenWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Invokes the windows procedure associated to this window
            </summary>
            <param name="m">The window message to send to window</param>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.VideoRendererType">
            <summary>
            Specifies different types of DirectShow
            Video Renderers
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase">
            <summary>
            The MediaPlayerBase is a base class to build raw, DirectShow based players.
            It inherits from DispatcherObject to allow easy communication with COM objects
            from different apartment thread models.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_graphInstances">
            <summary>
            A static value to hold a count for all graphs.  Each graph
            has it's own value that it uses and is updated by the
            GraphInstanceCookie property in the get method
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.WM_GRAPH_NOTIFY">
            <summary>
            The custom windows message constant for graph events
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.DSHOW_ONE_SECOND_UNIT">
            <summary>
            One second in 100ns units
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.DSHOW_VOLUME_SILENCE">
            <summary>
            The IBasicAudio volume value for silence
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.DSHOW_VOLUME_MAX">
            <summary>
            The IBasicAudio volume value for full volume
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.DSHOW_BALACE_MAX_ABS">
            <summary>
            The IBasicAudio balance max absolute value
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.DSHOW_TIMER_POLL_MS">
            <summary>
            Rate which our DispatcherTimer polls the graph
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_userId">
            <summary>
            UserId value for the VMR9 Allocator - Not entirely useful
            for this application of the VMR
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_videoRendererInitLock">
            <summary>
            Static lock.  Seems multiple EVR controls instantiated at the same time crash
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_basicAudio">
            <summary>
            DirectShow interface for controlling audio
            functions such as volume and balance
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_customAllocator">
            <summary>
            The custom DirectShow allocator
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_disposed">
            <summary>
            Flag for the Dispose pattern
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_graph">
            <summary>
            The DirectShow filter graph reference
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_window">
            <summary>
            The hWnd pointer we use for D3D stuffs
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_mediaControl">
            <summary>
            The DirectShow interface for controlling the
            filter graph.  This provides, Play, Pause, Stop, etc
            functionality.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_mediaEvent">
            <summary>
            The DirectShow interface for getting events
            that occur in the FilterGraph.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_hasVideo">
            <summary>
            Flag for if our media has video
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_naturalVideoHeight">
            <summary>
            The natural video pixel height, if applicable
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_naturalVideoWidth">
            <summary>
            The natural video pixel width, if applicable
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_timer">
            <summary>
            Our Win32 timer to poll the DirectShow graph
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Finalize">
            <summary>
            This objects last stand
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.m_graphInstanceId">
            <summary>
            The global instance Id of the graph.  We use this
            for the WndProc callback method.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.GraphInstanceId">
            <summary>
            The globally unqiue identifier of the graph
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.GetMainWindowHwndHelper">
            <summary>
            Helper function to get a valid hWnd to
            use with DirectShow and Direct3D
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.HasVideo">
            <summary>
            Is true if the media contains renderable video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.NaturalVideoWidth">
            <summary>
            Gets the natural pixel width of the current media.
            The value will be 0 if there is no video in the media.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.NaturalVideoHeight">
            <summary>
            Gets the natural pixel height of the current media.  
            The value will be 0 if there is no video in the media.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Volume">
            <summary>
            Gets or sets the audio volume.  Specifies the volume, as a 
            number from 0 to 1.  Full volume is 1, and 0 is silence.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Balance">
            <summary>
            Gets or sets the balance on the audio.
            The value can range from -1 to 1. The value -1 means the right channel is attenuated by 100 dB 
            and is effectively silent. The value 1 means the left channel is silent. The neutral value is 0, 
            which means that both channels are at full volume. When one channel is attenuated, the other 
            remains at full volume.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.NewAllocatorFrame">
            <summary>
            Event notifies when there is a new video frame
            to be rendered
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.NewAllocatorSurface">
            <summary>
            Event notifies when there is a new surface allocated
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Dispose">
            <summary>
            Frees any remaining memory
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Dispose(System.Boolean)">
            <summary>
            Part of the dispose pattern
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.OnGraphTimerTick">
            <summary>
            Polls the graph for various data about the media that is playing
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.OnMediaEvent(DirectShowLib.EventCode,System.IntPtr,System.IntPtr)">
            <summary>
            Is called when a new media event code occurs on the graph
            </summary>
            <param name="code">The event code that occured</param>
            <param name="param1">The first parameter sent by the graph</param>
            <param name="param2">The second parameter sent by the graph</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.StartGraphPollTimer">
            <summary>
            Starts the graph polling timer to update possibly needed
            things like the media position
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.StopGraphPollTimer">
            <summary>
            Stops the graph polling timer
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.RemoveWndProcHook">
            <summary>
            Removes our hook that listens to windows messages
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.AddWndProcHook">
            <summary>
            Adds a hook that listens to windows messages
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.WndProcHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Receives windows messages.  This is primarily used to get
            events that happen on our graph
            </summary>
            <param name="hwnd">The window handle</param>
            <param name="msg">The message Id</param>
            <param name="wParam">The message's wParam value</param>
            <param name="lParam">The message's lParam value</param>
            <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false. </param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.UnsetMediaEventExNotifyWindow">
            <summary>
            Unhooks the IMediaEventEx from the notification hWnd
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.SetMediaEventExInterface(DirectShowLib.IMediaEventEx)">
            <summary>
            Sets the MediaEventEx interface
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.SetupFilterGraph(DirectShowLib.IFilterGraph)">
            <summary>
            Configures all general DirectShow interfaces that the
            FilterGraph supplies.
            </summary>
            <param name="graph">The FilterGraph to setup</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.SetMediaControlInterface(DirectShowLib.IMediaControl)">
            <summary>
            Sets the MediaControl interface
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.SetBasicAudioInterface(DirectShowLib.IBasicAudio)">
            <summary>
            Sets the basic audio interface for controlling
            volume and balance
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.MediaOpened">
            <summary>
            Notifies when the media has successfully been opened
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.MediaClosed">
            <summary>
            Notifies when the media has been closed
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.MediaFailed">
            <summary>
            Notifies when the media has failed and produced an exception
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.MediaEnded">
            <summary>
            Notifies when the media has completed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.RegisterCustomAllocator(WPFMediaKit.DirectShow.MediaPlayers.ICustomAllocator)">
            <summary>
            Registers the custom allocator and hooks into it's supplied events
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CustomAllocatorNewAllocatorSurface(System.Object,System.IntPtr)">
            <summary>
            Local event handler for the custom allocator's new surface event
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CustomAllocatorNewAllocatorFrame">
            <summary>
            Local event handler for the custom allocator's new frame event
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.FreeCustomAllocator">
            <summary>
            Disposes of the current allocator
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.ResetLocalGraphResources">
            <summary>
            Resets the local graph resources to their
            default settings
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.FreeResources">
            <summary>
            Frees any allocated or unmanaged resources
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CreateVideoRenderer(WPFMediaKit.DirectShow.MediaPlayers.VideoRendererType,DirectShowLib.IGraphBuilder,System.Int32)">
            <summary>
            Creates a new renderer and configures it with a custom allocator
            </summary>
            <param name="rendererType">The type of renderer we wish to choose</param>
            <param name="graph">The DirectShow graph to add the renderer to</param>
            <param name="streamCount">Number of input pins for the renderer</param>
            <returns>An initialized DirectShow renderer</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CreateVideoRenderer(WPFMediaKit.DirectShow.MediaPlayers.VideoRendererType,DirectShowLib.IGraphBuilder)">
            <summary>
            Creates a new renderer and configures it with a custom allocator
            </summary>
            <param name="rendererType">The type of renderer we wish to choose</param>
            <param name="graph">The DirectShow graph to add the renderer to</param>
            <returns>An initialized DirectShow renderer</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CreateEnhancedVideoRenderer(DirectShowLib.IGraphBuilder,System.Int32)">
            <summary>
            Creates an instance of the EVR
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.CreateVideoMixingRenderer9(DirectShowLib.IGraphBuilder,System.Int32)">
            <summary>
            Creates a new VMR9 renderer and configures it with an allocator
            </summary>
            <returns>An initialized DirectShow VMR9 renderer</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Play">
            <summary>
            Plays the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Stop">
            <summary>
            Stops the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.StopInternal">
            <summary>
            Stops the media, but does not VerifyAccess() on
            the Dispatcher.  This can be used by destructors
            because it happens on another thread and our 
            DirectShow graph and COM run in MTA
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Close">
            <summary>
            Closes the media and frees its resources
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.Pause">
            <summary>
            Pauses the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeMediaEnded(System.EventArgs)">
            <summary>
            Invokes the MediaEnded event, notifying any subscriber that
            media has reached the end
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeMediaOpened">
            <summary>
            Invokes the MediaOpened event, notifying any subscriber that
            media has successfully been opened
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeMediaClosed(System.EventArgs)">
            <summary>
            Invokes the MediaClosed event, notifying any subscriber that
            the opened media has been closed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeMediaFailed(WPFMediaKit.DirectShow.MediaPlayers.MediaFailedEventArgs)">
            <summary>
            Invokes the MediaFailed event, notifying any subscriber that there was
            a media exception.
            </summary>
            <param name="e">The MediaFailedEventArgs contains the exception that caused this event to fire</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeNewAllocatorFrame">
            <summary>
            Invokes the NewAllocatorFrame event, notifying any subscriber that new frame
            is ready to be presented.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.InvokeNewAllocatorSurface(System.IntPtr)">
            <summary>
            Invokes the NewAllocatorSurface event, notifying any subscriber of a new surface
            </summary>
            <param name="pSurface">The COM pointer to the D3D surface</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.SetNativePixelSizes(DirectShowLib.IBaseFilter)">
            <summary>
            Sets the natural pixel resolution the video in the graph
            </summary>
            <param name="renderer">The video renderer</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.GetVideoSize(DirectShowLib.IBaseFilter,DirectShowLib.PinDirection,System.Int32)">
            <summary>
            Gets the video resolution of a pin on a renderer.
            </summary>
            <param name="renderer">The renderer to inspect</param>
            <param name="direction">The direction the pin is</param>
            <param name="pinIndex">The zero based index of the pin to inspect</param>
            <returns>If successful a video resolution is returned.  If not, a 0x0 size is returned</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.RemoveAllFilters(DirectShowLib.IGraphBuilder)">
            <summary>
            Removes all filters from a DirectShow graph
            </summary>
            <param name="graphBuilder">The DirectShow graph to remove all the filters from</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.AddFilterByName(DirectShowLib.IGraphBuilder,System.Guid,System.String)">
            <summary>
            Adds a filter to a DirectShow graph based on it's name and filter category
            </summary>
            <param name="graphBuilder">The graph builder to add the filter to</param>
            <param name="deviceCategory">The category the filter belongs to</param>
            <param name="friendlyName">The friendly name of the filter</param>
            <returns>Reference to the IBaseFilter that was added to the graph or returns null if unsuccessful</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaPlayerBase.FindPinInGraphByMediaType(System.Guid,DirectShowLib.PinDirection,DirectShowLib.IGraphBuilder)">
            <summary>
            Finds a pin that exists in a graph.
            </summary>
            <param name="majorOrMinorMediaType">The GUID of the major or minor type of the media</param>
            <param name="pinDirection">The direction of the pin - in/out</param>
            <param name="graph">The graph to search in</param>
            <returns>Returns null if the pin was not found, or if a pin is found, returns the first instance of it</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.ClassId.#ctor">
            <summary>Prevent instantiation.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.FileWriter">
            <summary>The File Writer filter can be used to write files to disc regardless of format. </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.FilterGraph">
            <summary>The Filter Graph Manager builds and controls filter graphs.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.WMAsfWriter">
            <summary>The WM ASF Writer filter accepts a variable number of input streams and creates an ASF file.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.RecComp">
            <summary>The RecComp object creates new content recordings by concatenating existing recordings.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.RecordingAttributes">
            <summary>The Recording object creates permanent recordings from streams that the Stream Buffer Sink filter captures.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.WavDest">
            <summary>The WavDes filter writes an audio stream to a WAV file.</summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.ClassId.DecryptTag">
            <summary>The Decrypter/Detagger filter conditionally decrypts samples that are encrypted by the Encrypter/Tagger filter.</summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.ClassId.CoCreateInstance(System.Guid)">
            <summary>Creates an instance of a COM object by class ID.</summary>
            <param name="id">The class ID of the component to instantiate.</param>
            <returns>A new instance of the class.</returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.OverDvdButtonEventArgs">
            <summary>
            Arguments for an event reporting that the user's
            mouse is over a Dvd button.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.OverDvdButtonEventArgs.IsOverDvdButton">
            <summary>
            Flag that defines if the cursor is over a Dvd butotn
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum">
            <summary>
            Value indicating the button to select
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum.Left">
            <summary>
            Left button
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum.Lower">
            <summary>
            Lower button
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum.Right">
            <summary>
            Right button
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum.Upper">
            <summary>
            Upper button
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.DvdError">
            <summary>
            Defines Dvd error conditions
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.Unexpected">
            <summary>
            Something unexpected happened; perhaps content is authored incorrectly. Playback is stopped.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.CopyProtectFail">
            <summary>
            Key exchange for DVD copy protection failed. Playback is stopped.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.InvalidDvd10Disc">
            <summary>
            DVD-Video disc is authored incorrectly for specification version 1. x. Playback is stopped.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.InvalidDiscRegion">
            <summary>
            The disc cannot be played because it is not authored to play in the system region. 
            You can try fixing the region mismatch by changing the system region with Dvdrgn.exe.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.LowParentalLevel">
            <summary>
            Player parental level is lower than the lowest parental level available in the DVD content. Playback is stopped.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.MacrovisionFail">
            <summary>
            Analog copy protection distribution failed. Playback stopped.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.IncompatibleSystemAndDecoderRegions">
            <summary>
            No discs can be played because the system region does not match the decoder region.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdError.IncompatibleDiscAndDecoderRegions">
            <summary>
            The disc cannot be played because the disc is not authored to be played in the decoder's region.
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.DvdTimeEventArgs">
            <summary>
            Arguments for an event reporting a new DVD time.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.DvdTimeEventArgs.DvdTime">
            <summary>
            The current Dvd time reported.
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer">
            <summary>
            Plays a DVD disc or will play DVD video files from a path.
            Normally, when a DVD is played with a custom allocator, IVideoWindow will
            be queried from the graph.  Since there will be no IVideoWindow in this graph
            the IDvdControl2 will crash when we try to use the SelectAtPosition and
            ActivateAtPosition.  We get around this by sacrificing the Line21 pin and
            connecting it to another video renderer that does have an IVideoWindow, but
            we make sure to keep the actual hWnd hidden.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.MEDIA_TIME_TO_MILLISECONDS">
            <summary>
            Constant value for converting media time back and forth
            to milliseconds;
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_currentDvdTime">
            <summary>
            The current time the DVD playback is at
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_dummyRenderWindow">
            <summary>
            Reference to the hidden render window
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_dvdButtonCount">
            <summary>
            The total number of DVD buttons currently on screen
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_dvdControl">
            <summary>
            The main interface for DVD control
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_dvdInfo">
            <summary>
            The main interface for DVD information
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_graph">
            <summary>
            The DirectShow filter graph
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_renderer">
            <summary>
            The renderer used to render video to WPF
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_rot">
            <summary>
            The 'Running Objects Table'.  Used to remotely debug the graph
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_renderTargetRect">
            <summary>
            Used to store the dummy renderer target coords of the subpicture video
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.DVD_SUBPICTURE_TYPE">
            <summary>
            The GUID of the DVD subpicture media type
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_isOverButton">
            <summary>
            Flag to remember if we are over a DVD button.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.m_dummyRendererPin">
            <summary>
            The input pin of the dummy renderer
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnDvdInserted">
            <summary>
            Fires when a DVD has been inserted
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnDvdEjected">
            <summary>
            Fires when a DVD has been ejected
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnDvdTime">
            <summary>
            Fires when the DVD time changes
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnOverDvdButton">
            <summary>
            Fires when the mouse is over a DVD button
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnDvdError">
            <summary>
            Fires when a DVD specific error occurs
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.DvdDirectory">
            <summary>
            The directory to try to play the DVD from.  If this is null then
            DirectShow will search for a DVD to play.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.GotoRootMenu">
            <summary>
            Navigates to the Root menu of the DVD title
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.TitleCount">
            <summary>
            Gets the total number of titles on the DVD
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.GotoTitleMenu">
            <summary>
            Navigates to the Title menu of the DVD
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.ReturnFromSubmenu">
            <summary>
            Returns the display from a submenu to its parent menu
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.SelectAngle(System.Int32)">
            <summary>
            The SelectAngle method sets the new angle when the DVD Navigator is in an angle block
            </summary>
            <param name="angle">Value of the new angle, which must be from 1 through 9</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.Resume">
            <summary>
            Leaves a menu and resumes playback.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.SelectRelativeButton(WPFMediaKit.DirectShow.MediaPlayers.DvdRelativeButtonEnum)">
            <summary>
            Selects the specified relative button (upper, lower, right, left)
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.SelectAtPosition(System.Double,System.Double)">
            <summary>
            Selects a menu item at a certain position on the video
            </summary>
            <param name="widthRatio">The percentage to the right</param>
            <param name="heightRatio">The percentage to the bottom</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.ActivateAtPosition(System.Double,System.Double)">
            <summary>
            Activates a menu item at a certain position on the video
            </summary>
            <param name="widthRatio">The ratio to the right</param>
            <param name="heightRatio">The ratio to the bottom</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.SetDvdButtonCount(System.Int32)">
            <summary>
            Sets the number of DVD buttons found in the current DVD video
            </summary>
            <param name="buttonCount">The total number of buttons</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.PlayTitle(System.Int32)">
            <summary>
            Plays a specific title by a given title index
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.PlayNextChapter">
            <summary>
            Plays the next chapter of the DVD
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.PlayForwards(System.Double)">
            <summary>
            Plays the DVD forward
            </summary>
            <param name="speed">The speed at which the playback is done</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.PlayBackwards(System.Double)">
            <summary>
            Plays the DVD backwards
            </summary>
            <param name="speed">The speed at the playback is done</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.PlayPreviousChapter">
            <summary>
            Plays the previous chapter of the DVD
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.BuildGraph">
            <summary>
            Builds the DVD DirectShow graph
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.ConfigureDummyWindow">
            <summary>
            Configures our "dummy" IVideoWindow to work well
            with our interactive menus and to make sure the
            window remains hidden from view.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.MediaPosition">
            <summary>
            Gets or sets the position in miliseconds of the media
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.SetTitleDuration">
            <summary>
            Here we extract out the new Dvd duration of 
            the title currently being played
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.OnMediaEvent(DirectShowLib.EventCode,System.IntPtr,System.IntPtr)">
            <summary>
            Is called when a new media event code occurs on the graph
            </summary>
            <param name="code">The event code that occured</param>
            <param name="lparam1">The first parameter sent by the graph</param>
            <param name="lparam2">The second parameter sent by the graph</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.Play">
            <summary>
            Plays the Dvd
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.DvdPlayer.FreeResources">
            <summary>
            Frees any allocated or unmanaged resources
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile">
            <summary>
            Helper class to load <see cref="T:IBaseFilter"/>s from a file. It's not needed that the filter is registered.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.LoadLibraryEx(System.String,System.IntPtr,System.UInt32)">
            <summary>
            Loads the specified module into the address space of the calling process. The specified module may cause other modules to be loaded.
            </summary>
            <param name="lpFileName">Pointer to a null-terminated string that names the executable module (either a .dll or .exe file). The name specified is the file name of the module and is not related to the name stored in the library module itself, as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <param name="hFile">This parameter is reserved for future use. It must be IntPtr.Zero.</param>
            <param name="dwFlags">The action to be taken when loading the module. If no flags are specified, the behavior of this function is identical to that of the <see cref="!:LoadLibrary"/> function.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br/>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.DllList">
            <summary>
            Holds a list of dll handles and unloads the dlls in the destructor.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.GetClassFactory(System.String,System.Guid)">
            <summary>
            Gets a class factory for a specific COM Class ID. 
            </summary>
            <param name="dllName">The dll where the COM class is implemented.</param>
            <param name="filterPersistClass">The requested Class ID.</param>
            <returns>IClassFactory instance used to create instances of that class.</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.LoadFilterFromDll(System.String,System.Guid,System.Boolean)">
            <summary>
            Loads an COM .dll or .ax and creates an instance of the given Interface with IID <paramref name="interfaceId"/>.
            </summary>
            <param name="dllName">Filename of a .dll or .ax component</param>
            <param name="interfaceId">Interface to create an object instance for</param>
            <param name="useAssemblyRelativeLocation">Combine the given file name to a full path</param>
            <returns>Instance or <c>null</c></returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.FilterFromIntPtr(System.IntPtr)">
            <summary>
            Query filter từ pointer
            </summary>
            <param name="p">Pointer của filter lấy từ LoadFilterFromFile.FilterFromFileHelper</param>
            <returns>Đối tượng filter</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterFromFile.BuildAssemblyRelativePath(System.String)">
            <summary>
            Builds a full path for a given <paramref name="fileName"/> that is located in the same folder as the <see cref="M:System.Reflection.Assembly.GetCallingAssembly"/>.
            </summary>
            <param name="fileName">File name</param>
            <returns>Combined path</returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.Filters">
            <summary>
             Provides collections of devices and compression codecs
             installed on the system. 
            </summary>
            <example>
             Devices and compression codecs are implemented in DirectShow 
             as filters, see the <see cref="T:WPFMediaKit.DirectShow.MediaPlayers.Filter"/> class for more 
             information. To list the available video devices:
             <code><div style="background-color:whitesmoke;">
              Filters filters = new Filters();
              foreach ( Filter f in filters.VideoInputDevices )
              {
            	Debug.WriteLine( f.Name );
              }
             </div></code>
             <seealso cref="T:WPFMediaKit.DirectShow.MediaPlayers.Filter"/>
            </example>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filters.VideoInputDevices">
            <summary> Collection of available video capture devices. </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filters.AudioInputDevices">
            <summary> Collection of available audio capture devices. </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filters.VideoCompressors">
            <summary> Collection of available video compressors. </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filters.AudioCompressors">
            <summary> Collection of available audio compressors. </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.FilterCollection">
            <summary>
             A collection of Filter objects (DirectShow filters).
             This is used by the <see cref="!:Capture"/> class to provide
             lists of capture devices and compression filters. This class
             cannot be created directly.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterCollection.#ctor(System.Guid)">
            <summary> Populate the collection with a list of filters from a particular category. </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterCollection.#ctor(System.Guid,System.Boolean)">
            <summary> Populate the collection with a list of filters from a particular category. </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.FilterCollection.getFilters(System.Guid)">
            <summary> Populate the InnerList with a list of filters from a particular category </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.FilterCollection.Item(System.Int32)">
            <summary> Get the filter at the specified index. </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.Filter">
            <summary>
             Represents a DirectShow filter (e.g. video capture device, 
             compression codec).
            </summary>
            <remarks>
             To save a chosen filer for later recall
             save the MonikerString property on the filter: 
             <code><div style="background-color:whitesmoke;">
              string savedMonikerString = myFilter.MonikerString;
             </div></code>
             
             To recall the filter create a new Filter class and pass the 
             string to the constructor: 
             <code><div style="background-color:whitesmoke;">
              Filter mySelectedFilter = new Filter( savedMonikerString );
             </div></code>
            </remarks>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filter._name">
            <summary> Human-readable name of the filter </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filter.MonikerString">
            <summary> Unique string referencing this filter. This string can be used to recreate this filter. </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Filter.mon">
            <summary> getAnyMoniker take very long time, so use a cached value </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.#ctor(System.String)">
            <summary> Create a new filter from its moniker string. </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.#ctor(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary> Create a new filter from its moniker </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.getMonikerString(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary> Retrieve the a moniker's display name (i.e. it's unique string) </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.getName(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary> Retrieve the human-readable name of the filter </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.getName(System.String)">
            <summary> Get a moniker's human-readable name based on a moniker string. </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.getAnyMoniker">
            <summary>
             This method gets a System.Runtime.InteropServices.ComTypes.IMoniker object.
            
             HACK: The only way to create a System.Runtime.InteropServices.ComTypes.IMoniker from a moniker 
             string is to use System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(). So I 
             need ANY System.Runtime.InteropServices.ComTypes.IMoniker object so that I can call 
             ParseDisplayName(). Does anyone have a better solution?
            
             This assumes there is at least one video compressor filter
             installed on the system.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Filter.CompareTo(System.Object)">
            <summary>
             Compares the current instance with another object of 
             the same type.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.AudioRendererDevice">
            <summary> CLSID_AudioRendererCategory, audio render category </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.AudioInputDevice">
            <summary> CLSID_AudioInputDeviceCategory, audio capture category </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.VideoInputDevice">
            <summary> CLSID_VideoInputDeviceCategory, video capture category </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.VideoCompressorCategory">
            <summary> CLSID_VideoCompressorCategory, Video compressor category </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.AudioCompressorCategory">
            <summary> CLSID_AudioCompressorCategory, audio compressor category </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.LegacyAmFilterCategory">
            <summary> CLSID_LegacyAmFilterCategory, legacy filters </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.FilterCategory.ActiveMovieCategory">
            <summary>
            #MW# CLSID_ActiveMovieCategory, a superset of all the available filters
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector">
            <summary>
            The MediaDetector class allows to query meta data from audio/video media files.
            This includes CODEC information and the ability to grab video snapshots.
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.FourCC">
            <summary>
            The video CODEC tag
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.VideoBitsPerPixel">
            <summary>
            The bits per pixel of the video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.VideoStreamLength">
            <summary>
            The length of the video stream
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.AudioStreamLength">
            <summary>
            The length of the audio stream
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.AudioBitsPerSample">
            <summary>
            The number of bits per sample in the audio stream
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.AudioSamplesPerSecond">
            <summary>
            The HZ of the audio samples
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.AudioChannels">
            <summary>
            The number of audio channels in audio stream
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.Filename">
            <summary>
            The filename of the loaded media
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.VideoResolution">
            <summary>
            The native pixel size of the video, if a
            video stream exists
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.StreamCount">
            <summary>
            The total amount of streams that exist in the media
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.HasAudio">
            <summary>
            Is true if the loaded media has an audio stream
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.HasVideo">
            <summary>
            Is true if the loaded media has a video stream
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.FreeResources">
            <summary>
            Frees any memory and resets to a default state
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.ConvertFourCC(System.Int32)">
            <summary>
            Converts a FourCC code to a string
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.LoadMedia(System.String)">
            <summary>
            Loads a media file.
            </summary>
            <param name="filename">The full path of the media file to load</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.ReadAudioFormat(DirectShowLib.AMMediaType)">
            <summary>
            Reads the audio stream information from the media file
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.ReadVideoFormat(DirectShowLib.AMMediaType)">
            <summary>
            Reads the video stream information for the media file
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaDetector.GetImage(System.TimeSpan)">
            <summary>
            Gets an image snapshot from the media file that was opened
            </summary>
            <param name="position">The media time position for the requested thumbnail</param>
            <returns>Returns a BitmapSource of the video position.</returns>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer">
            <summary>
            The MediaSeekingPlayer adds media seeking functionality to
            to the MediaPlayerBase class
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.m_currentPosition">
            <summary>
            Local cache of the current position
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.m_mediaSeeking">
            <summary>
            The DirectShow media seeking interface
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.Duration">
            <summary>
            Gets the duration in miliseconds, of the media that is opened
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.SpeedRatio">
            <summary>
            Sets the rate at which the media plays back
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.MediaPosition">
            <summary>
            Gets or sets the position in miliseconds of the media
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.m_currentPositionFormat">
            <summary>
            The current position format the media is using
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.m_preferedPositionFormat">
            <summary>
            The prefered position format to use with the media
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.CurrentPositionFormat">
            <summary>
            The current media positioning format
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.PreferedPositionFormat">
            <summary>
            The prefered media positioning format
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.MediaPositionChanged">
            <summary>
            Notifies when the position of the media has changed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.SetupFilterGraph(DirectShowLib.IFilterGraph)">
            <summary>
            This method is overriden to get out the seeking
            interfaces from the DirectShow graph
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.FreeResources">
            <summary>
            Frees any allocated or unmanaged resources
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.OnGraphTimerTick">
            <summary>
            Polls the graph for various data about the media that is playing
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.ConvertPositionFormat(WPFMediaKit.DirectShow.MediaPlayers.MediaPositionFormat)">
            <summary>
            Converts a MediaPositionFormat enum to a DShow TimeFormat GUID
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.ConvertPositionFormat(System.Guid)">
            <summary>
            Converts a DirectShow TimeFormat GUID to a MediaPositionFormat enum
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaSeekingPlayer.SetMediaSeekingInterface(DirectShowLib.IMediaSeeking)">
            <summary>
            Setup the IMediaSeeking interface
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer">
            <summary>
            The MediaUriPlayer plays media files from a given Uri.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.DEFAULT_AUDIO_RENDERER_NAME">
            <summary>
            The name of the default audio render.  This is the
            same on all versions of windows
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.m_audioRenderer">
            <summary>
            Set the default audio renderer property backing
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.m_dsRotEntry">
            <summary>
            Used to view the graph in graphedit
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.m_graph">
            <summary>
            The DirectShow graph interface.  In this example
            We keep reference to this so we can dispose 
            of it later.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.sourceFilter">
            <summary>
            LAV Splitter Source
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.videoDecoderFilter">
            <summary>
            Filter LAV Video Decode
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.audioDecoderfilter">
            <summary>
            Filter LAV Audio Decoder
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.colorSpaceConverterFilter">
            <summary>
            Filter Color Space Converter
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.m_sourceUri">
            <summary>
            The media Uri
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.Source">
            <summary>
            Gets or sets the Uri source of the media
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.VideoRenderer">
            <summary>
            The renderer type to use when
            rendering video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.AudioRenderer">
            <summary>
            The name of the audio renderer device
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.Loop">
            <summary>
            Gets or sets if the media should play in loop
            or if it should just stop when the media is complete
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.OnMediaEvent(DirectShowLib.EventCode,System.IntPtr,System.IntPtr)">
            <summary>
            Is ran everytime a new media event occurs on the graph
            </summary>
            <param name="code">The Event code that occured</param>
            <param name="lparam1">The first event parameter sent by the graph</param>
            <param name="lparam2">The second event parameter sent by the graph</param>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.OpenSource">
            <summary>
            Opens the media by initializing the DirectShow graph
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.InsertAudioRenderer(System.String)">
            <summary>
            Inserts the audio renderer by the name of
            the audio renderer that is passed
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.MediaUriPlayer.FreeResources">
            <summary>
            Frees all unmanaged memory and resets the object back
            to its initial state
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer">
            <summary>
            A Player that plays video from a video capture device.
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_desiredHeight">
            <summary>
            The video capture pixel height
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_desiredWidth">
            <summary>
            The video capture pixel width
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_fps">
            <summary>
            The video capture's frames per second
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_graph">
            <summary>
            Our DirectShow filter graph
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_renderer">
            <summary>
            The DirectShow video renderer
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_captureDevice">
            <summary>
            The capture device filter
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_videoCaptureSource">
            <summary>
            The name of the video capture source device
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_videoCaptureSourceChanged">
            <summary>
            Flag to detect if the capture source has changed
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_videoCaptureDevice">
            <summary>
            The video capture device
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_videoCaptureDeviceChanged">
            <summary>
            Flag to detect if the capture source device has changed
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.m_sampleGrabber">
            <summary>
            The sample grabber interface used for getting samples in a callback
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.EnableSampleGrabbing">
            <summary>
            Gets or sets if the instance fires an event for each of the samples
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.NewVideoSample">
            <summary>
            Fires when a new video sample is ready
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.VideoCaptureSource">
            <summary>
            The name of the video capture source to use
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.FPS">
            <summary>
            The frames per-second to play
            the capture device back at
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.UseYuv">
            <summary>
            Gets or sets if Yuv is the prefered color space
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.DesiredWidth">
            <summary>
            The desired pixel width of the video
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.DesiredHeight">
            <summary>
            The desired pixel height of the video
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.Play">
            <summary>
            Plays the video capture device
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.Pause">
            <summary>
            Pauses the video capture device
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.SetupGraph">
            <summary>
            Configures the DirectShow graph to play the selected video capture
            device with the selected parameters
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.VideoCapturePlayer.SetVideoCaptureParameters(DirectShowLib.ICaptureGraphBuilder2,DirectShowLib.IBaseFilter,System.Guid)">
            <summary>
            Sets the capture parameters for the video capture device
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator">
            <summary>
            The Vmr9Allocator is a custom allocator for the VideoMixingRenderer9
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.E_FAIL">
            <summary>
            Base constant for FAIL error codes
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.D3D_SDK_VERSION">
            <summary>
            The SDK version of D3D we are using
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_staticLock">
            <summary>
            Lock for shared resources
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_d3d">
            <summary>
            Direct3D functions
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_d3dEx">
            <summary>
            Direct3D functions of Vista
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_hWnd">
            <summary>
            The window handle, needed for D3D intialization
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_device">
            <summary>
            The Direct3D device
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_instanceLock">
            <summary>
            Lock for instance's resources
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_disposed">
            <summary>
            Part of the "Dispose" pattern
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_allocatorNotify">
            <summary>
            Applications use this interface to set a custom allocator-presenter 
            and the allocator-presenter uses this interface to inform the VMR of 
            changes to the system environment that affect the Direct3D surfaces.
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.NewAllocatorFrame">
            <summary>
            Fires each time a frame needs to be presented
            </summary>
        </member>
        <member name="E:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.NewAllocatorSurface">
            <summary>
            Fires when new D3D surfaces are allocated
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_privateSurface">
            <summary>
            Private surface for YUV stuffs
            </summary>
        </member>
        <member name="F:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.m_privateTexture">
            <summary>
            Private texture for YUV stuffs
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.#ctor">
            <summary>
            Creates a new VMR9 custom allocator to use with Direct3D
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.InvokeNewSurfaceEvent(System.IntPtr)">
            <summary>
            Fires the OnNewAllocatorSurface event, notifying the
            subscriber that new surfaces are available
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.InvokeNewAllocatorFrame">
            <summary>
            Fires the NewAllocatorFrame event notifying the
            subscriber that a new frame is ready to be presented
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.Dispose">
            <summary>
            Frees any remaining unmanaged memory
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.Dispose(System.Boolean)">
            <summary>
            Part of the dispose pattern
            </summary>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.DxSurfaces">
            <summary>
            Current Direct3D surfaces our allocator has ready and allocated
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.StartPresenting(System.IntPtr)">
            <summary>
            The StartPresenting method is called just before the video starts playing. 
            The allocator-presenter should perform any necessary configuration in this method.
            </summary>
            <param name="userId">
            An application-defined DWORD_PTR cookie that uniquely identifies this instance of the 
            VMR for use in scenarios when one instance of the allocator-presenter is used with multiple VMR instances.
            </param>
            <returns>Returns an HRESULT</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.StopPresenting(System.IntPtr)">
            <summary>
            The StopPresenting method is called just after the video stops playing. 
            The allocator-presenter should perform any necessary cleanup in this method.
            </summary>
            <param name="dwUserID">
            An application-defined DWORD_PTR cookie that uniquely identifies this instance of the 
            VMR for use in scenarios when one instance of the allocator-presenter is used with multiple VMR instances.
            </param>
            <returns></returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.PresentImage(System.IntPtr,DirectShowLib.VMR9PresentationInfo@)">
            <summary>
            The PresentImage method is called at precisely the moment this video frame should be presented.
            </summary>
            <param name="dwUserID">
            An application-defined DWORD_PTR that uniquely identifies this instance of the VMR in scenarios when 
            multiple instances of the VMR are being used with a single instance of an allocator-presenter.
            </param>
            <param name="lpPresInfo">
            Specifies a VMR9PresentationInfo structure that contains information about the video frame.
            </param>
            <returns>Returns an HRESULT</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.TestRestoreLostDevice">
            <summary>
            Tests if the D3D device has been lost and if it has
            it is retored. This happens on XP with things like
            resolution changes or pressing ctrl + alt + del.  With
            Vista, this will most likely never be called unless the
            video driver hangs or is changed.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.GetAdapterMonitor(System.UInt32)">
            <summary>
            Gets the pointer to the adapter monitor
            </summary>
            <param name="adapterOrdinal">The ordinal of the adapter</param>
            <returns>A pointer to the adaptor monitor</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.InitializeDevice(System.IntPtr,DirectShowLib.VMR9AllocationInfo@,System.Int32@)">
            <summary>
            The InitializeDevice method is called by the Video Mixing Renderer 9 (VMR-9) 
            when it needs the allocator-presenter to allocate surfaces.
            </summary>
            <param name="userId">
            Application-defined identifier. This value is the same value that the application 
            passed to the IVMRSurfaceAllocatorNotify9.AdviseSurfaceAllocator method in the 
            dwUserID parameter.
            </param>
            <param name="lpAllocInfo">
            Pointer to a VMR9AllocationInfo structure that contains a description of the surfaces to create.
            </param>
            <param name="lpNumBuffers">
            On input, specifies the number of surfaces to create. When the method returns, 
            this parameter contains the number of buffers that were actually allocated.
            </param>
            <returns>Returns an HRESULT code</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.TerminateDevice(System.IntPtr)">
            <summary>
            The TerminateDevice method releases the Direct3D device.
            </summary>
            <param name="id">
            Application-defined identifier. This value is the same value that the application 
            passed to the IVMRSurfaceAllocatorNotify9.AdviseSurfaceAllocator method 
            in the dwUserID parameter.
            </param>
            <returns></returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.GetSurface(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            The GetSurface method retrieves a Direct3D surface
            </summary>
            <param name="userId">
            Application-defined identifier. This value is 
            the same value that the application passed to the 
            IVMRSurfaceAllocatorNotify9.AdviseSurfaceAllocator 
            method in the dwUserID parameter.
            </param>
            <param name="surfaceIndex">
            Specifies the index of the surface to retrieve. 
            </param>
            <param name="surfaceFlags"></param>
            <param name="lplpSurface">
            Address of a variable that receives an IDirect3DSurface9 
            interface pointer. The caller must release the interface.</param>
            <returns></returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.AdviseNotify(DirectShowLib.IVMRSurfaceAllocatorNotify9)">
            <summary>
            The AdviseNotify method provides the allocator-presenter with the VMR-9 filter's 
            interface for notification callbacks. If you are using a custom allocator-presenter, 
            the application must call this method on the allocator-presenter, with a pointer to 
            the VMR's IVMRSurfaceAllocatorNotify9 interface. The allocator-presenter uses this 
            interface to communicate with the VMR. 
            </summary>
            <param name="lpIVMRSurfAllocNotify">
            Specifies the IVMRSurfaceAllocatorNotify9 interface that the allocator-presenter will 
            use to pass notifications back to the VMR.</param>
            <returns>Returns an HRESULT value</returns>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.GetComPointer(System.Object)">
            <summary>
            Gets a native pointer to a COM object.  This method does not
            add a reference count.
            </summary>
            <param name="comObj">The RCW to the COM object</param>
            <returns>Pointer to the COM object</returns>
        </member>
        <member name="P:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.IsVistaOrBetter">
            <summary>
            Gets if the current operating system is
            Windows Vista or higher.
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.CreateDevice">
            <summary>
            Creates a Direct3D device
            </summary>
        </member>
        <member name="M:WPFMediaKit.DirectShow.MediaPlayers.Vmr9Allocator.FreeSurfaces">
            <summary>
            Releases reference to all allocated D3D surfaces
            </summary>
        </member>
        <member name="T:WPFMediaKit.DirectX.IDirect3DDevice9">
            <summary>
            CLSID_IDirect3DDevice9
            </summary>
        </member>
        <member name="T:WPFMediaKit.Effects.DeeperColorEffect">
            <summary>
            This is a WPF pixel shader effect that will scale 16-235 HD-TV pixel output to
            0-255 pixel values for deeper color on video.
            </summary>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.IsObjectInstalled(System.Guid)">
            <summary>
            Check if a COM Object is available
            </summary>
            <param name="clsid">The CLSID of this object</param>
            <returns>true if the object is available, false if not</returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.SafeRelease(System.Object)">
            <summary>
            Release a ComObject
            </summary>
            <param name="obj"></param>
            <returns>ref counter of the object</returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.TryFinalRelease``1(``0@)">
            <summary>
            Try (final) release a Com-Object and set the obj to null
            </summary>
            <typeparam name="I"></typeparam>
            <param name="comobj"></param>
            <returns>true if object is released (not null and a com object)</returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.CreateFromDll``1(System.String,System.Guid)">
            <summary>Function to get a COM object from file (dll)</summary>
            <param name="dllName">a (unmanaged) dll-file where the COM object is implemented</param>
            <param name="mpaguid">objects Guid</param>
            <returns>a interface or null if not loaded</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the method can't creat COM-object</exception>
            <exception cref="!:System.Runtime.DllNotFoundException">Thrown if the dll not found</exception>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:WPFMediaKit.MediaFoundation.COMUtil.ComHelper">
            <summary>
            Utility class to get a Class Factory for a certain Class ID
            by loading the dll that implements that class
            </summary>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.GetClassFactory(System.String,System.Guid)">
            <summary>
            Gets a class factory for a specific COM Class ID.
            </summary>
            <param name="dllName">The dll where the COM class is implemented</param>
            <param name="filterPersistClass">The requested Class ID</param>
            <returns>IClassFactory instance used to create instances of that class</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the method can't creat COM-object</exception>
            <exception cref="!:System.Runtime.DllNotFoundException">Thrown if the dll not found</exception>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.BuildAssemblyRelativePath(System.String)">
            <summary>
            Builds a full path for a given <paramref name="fileName"/> that is located in the same folder as the <see cref="M:System.Reflection.Assembly.GetCallingAssembly"/>.
            </summary>
            <param name="fileName">File name</param>
            <returns>Combined path</returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. 
            The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, 
            or the function's ordinal value. If this parameter is an ordinal value, 
            it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br>
            <br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.LoadLibrary(System.String)">
            <summary>
            LoadLibrary function maps the specified executable module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">Pointer to a null-terminated string that names the executable module.
            The name specified is the file name of the module and is not related to the name stored in the library module itself, 
            as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br></br>
            <br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). 
            When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>
            If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.COMUtil.ComHelper.DLLLoader.GetDLLHandle(System.String)">
            <summary>
            GetDLLHandle
            </summary>
            <param name="dllName"></param>
            <returns>the handle from registered dll</returns>
        </member>
        <member name="F:WPFMediaKit.MediaFoundation.EvrPresenter.EVR_PRESENTER_CLSID">
            <summary>
            The GUID of our EVR custom presenter COM object
            </summary>
        </member>
        <member name="P:WPFMediaKit.MediaFoundation.EvrPresenter.VideoPresenter">
            <summary>
            The custom EVR video presenter COM object
            </summary>
        </member>
        <member name="E:WPFMediaKit.MediaFoundation.EvrPresenter.NewAllocatorFrame">
            <summary>
            Invokes when a new frame has been allocated
            to a surface
            </summary>
        </member>
        <member name="E:WPFMediaKit.MediaFoundation.EvrPresenter.NewAllocatorSurface">
            <summary>
            Invokes when a new surface has been allocated
            </summary>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.EvrPresenter.PresentSurfaceCB(System.IntPtr)">
            <summary>
            Called by the custom EVR Presenter, notifying that
            there is a new D3D surface and/or there needs to be
            a frame rendered
            </summary>
            <param name="pSurface">The Direct3D surface</param>
            <returns>A HRESULT</returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.EvrPresenter.CreateNew">
            <summary>
            Create a new EVR video presenter
            </summary>
            <returns></returns>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.EvrPresenter.InvokeNewAllocatorFrame">
            <summary>
            Fires the NewAllocatorFrame event
            </summary>
        </member>
        <member name="M:WPFMediaKit.MediaFoundation.EvrPresenter.InvokeNewAllocatorSurface(System.IntPtr)">
            <summary>
            Fires the NewAlloctorSurface event
            </summary>
            <param name="pSurface">D3D surface pointer</param>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.m_shutdown">
            <summary>
            Flag to set if the dispatcher needs to shutdown
            </summary>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.m_queue">
            <summary>
            Queue of delegates to execute
            </summary>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.m_dispatcherThread">
            <summary>
            The thread this dispatcher is running on
            </summary>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.WM_DISPATCHER_NOTIFY_DELEGATE">
            <summary>
            The message to post to our message pump to wake it up
            for processing the managed delegate queue
            </summary>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.WM_QUIT">
            <summary>
            Windows message notifiying listener's of the pump we outta there
            and the pump is about to end
            </summary>
        </member>
        <member name="F:WPFMediaKit.Threading.WorkDispatcher.m_threadId">
            <summary>
            The OS's thread identifier
            </summary>
        </member>
        <member name="P:WPFMediaKit.Threading.WorkDispatcher.DispatcherThread">
            <summary>
            The thread that the dispatcher is running under
            </summary>
        </member>
        <member name="P:WPFMediaKit.Threading.WorkDispatcher.Shutdown">
            <summary>
            Flag to set if the dispatcher needs to shutdown
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.BeginInvoke(System.Delegate)">
            <summary>
            Async executes a method on our Dispatcher's thread
            </summary>
            <param name="method">The delegate to execute</param>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.InvokeNotifyMessageDelegate">
            <summary>
            Wakes up the pump to notify there are delegates to execute
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.BeginInvokeShutdown">
            <summary>
            Shuts down the dispatcher and completes any
            delegates or messages that are in the queue
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.DoEvents">
            <summary>
            Forces execution of any messages in the queue
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.Run(System.Threading.ManualResetEvent)">
            <summary>
            Runs the message pump in the Dispatcher
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.DoManagedMessageQueue">
            <summary>
            Executes all the queued delegates
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.PostQuit">
            <summary>
            Posts a quit message to the message queue.
            This lets all pump listeners know that
            the end is near and abandon all resources
            </summary>
        </member>
        <member name="M:WPFMediaKit.Threading.WorkDispatcher.DoMessagePump">
            <summary>
            The heart of the message pump.  This method
            will not return until the message pump has
            been terminated.
            </summary>
        </member>
    </members>
</doc>
